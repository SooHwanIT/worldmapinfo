{"version":3,"sources":["Component/Screens/Semantic/Header.tsx","Component/Screens/Semantic/Footer.tsx","Component/Screens/Home.tsx","Component/Api/Corona.tsx","Component/Api/Flag.tsx","Component/Screens/Etc/CountryInfo.tsx","Component/Screens/Etc/CountryTable.tsx","Component/Api/Graph.tsx","Component/Screens/Etc/SearchPreview.tsx","Component/Screens/Etc/Autocomplete.tsx","Component/Screens/Etc/CountryInput.tsx","Component/Screens/Compare.tsx","Component/Screens/Etc/AnalysisInfo.tsx","Component/Screens/Etc/AnalysisInput.tsx","Component/Screens/Analysis.tsx","Component/Screens/Map.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","src","alt","to","Footer","href","Home","Corona","data","value","useState","state","setState","axios","require","default","options","method","url","name","headers","request","then","response","replace","catch","error","console","country","Flag","result_1","findIndex","e","cName","firstCountry","log","iso","width","height","defaultProps","CountryInfo","first","second","colSpan","CountryTable","data_1","EconomyGraph","iso1","iso2","_data","ISO","result_2","result_3","secondCountry","dataCountry","scrolling","SearchPreview","AutoComplete","renderResult","filter","i","keyword","toLowerCase","substring","length","map","CountryInput","lookup","firstCountryName","setFirstCountryName","secondCountryName","setsecondCountryName","setvalue","byCountry","tabIndex","placeholder","type","onChange","target","onClick","Graph","Compare","AnalysisInfo","CountryName","setCountryName","Analysis","AnalysisInput","Map","val","pre","suff","title","size","onClickFunction","event","countryName","isoCode","prefix","suffix","fNumber","num","digits","si","symbol","toFixed","formattedNumber","parseInt","color","App","path","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee88b075.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Header.css'\r\n\r\n//  아까 z-index 안 먹던거 position: absolute; 주고 다시해봐\r\nconst Header =()=> {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src=\"https://i.ibb.co/HgptDCG/logo.png\" alt=\"header logo\"/>\r\n            <p></p>\r\n            <Link to='/'><p>Home</p></Link>\r\n            <Link to='/analysis'><p>Country analysis</p></Link>\r\n            <Link to='/compare'><p>Country compare</p></Link>\r\n            <Link to='/Map'><p>Map</p></Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import * as React from 'react';\r\nimport '../../css/Footer.css'\r\nimport { AiFillGithub } from 'react-icons/ai';\r\n\r\n\r\nconst Footer =()=> {\r\n    return (\r\n        <div>\r\n            <div className=\"footer\">\r\n                <p>github address</p>\r\n                <a href=\"https://github.com/SooHwanIT\">최수환&nbsp;<AiFillGithub/></a>&nbsp;\r\n                <a href=\"https://github.com/butdory\">정원영&nbsp;<AiFillGithub/></a>&nbsp;\r\n                <a href=\"https://github.com/Green050121\">윤도현&nbsp;<AiFillGithub/></a>&nbsp;\r\n                <a href=\"https://github.com/SooHwanIT\">최현정&nbsp;<AiFillGithub/></a>&nbsp;\r\n                <p>made by sunrin internet highschool 최수환 최현정 정원영 윤도현</p>\r\n                <p>Contact webmaster for more information. @gmail.com</p>\r\n                <p>Pixabay License, last modified 7, 17, 2021, \"https://pixabay.com/ko/\"</p>\r\n                <img src=\"https://i.ibb.co/HgptDCG/logo.png\" alt=\"footer logo\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import * as React from 'react';\r\n// import './Home.css'\r\nimport Header from './Semantic/Header';\r\nimport Footer from './Semantic/Footer';\r\nimport { IoMdPerson } from \"react-icons/io\";\r\nimport '../css/Home.css'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"background\">\r\n            <Header/>\r\n            <div className=\"background_deco\"></div>\r\n\r\n            <div className=\"main_text\">\r\n                <img src=\"https://i.ibb.co/zbpsF3W/v2.png\" alt=\"contents logo\" className=\"contents_logo\"/>\r\n                <p className=\"explane\">\r\n                    'CORONOMY'는 CORONA와 ECONOMY의 합성어로 코로나로 인해 경제가 어떻게 변화하였는지 시각 자료를 제공하는 사이트 입니다.\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"bt\">\r\n                <a href='/analysis' className=\"A\"><span className=\"country_analysis\">Go To Country Analysis</span></a>\r\n                <a href='/compare' className=\"C\"><span className=\"country compare\">Go To Country Compare</span></a>\r\n                <a href='/map' className=\"M\"><span className=\"map\">Go To Map</span></a>\r\n            </div>\r\n\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport {useState} from 'react';\r\n\r\ninterface Coronaa {\r\n    name:string,\r\n    value:number\r\n}\r\n\r\nconst Corona: React.FC<Coronaa> = (data) => {\r\n\r\n        //     'Population':'Population',\r\n    //     'Test':'Total Tests',\r\n    //     'Death':'Total Deaths',\r\n    //     'ActivityCase':'Active Cases',\r\n    //     'Case':'Total Cases',\r\n    //     'Recovery':'Total Recovered'\r\n    // }\r\n\r\n    let value = [\r\n        'Population',\r\n        'Total Tests',\r\n        'Total Deaths',\r\n        'Active Cases',\r\n        'Total Cases',\r\n        'Total Recovered'\r\n    ]\r\n\r\n    const [state,setState] = useState('');\r\n\r\n    // const [statePopulation, setPopulationState] = useState(\"\"); // 총 인구수\r\n    // const [stateTest, setTestState] = useState(\"\"); // 총 검사자\r\n    // const [stateDeath, setDeathState] = useState(\"\"); // 총 사망자\r\n    // const [stateActivityCase, setActivityCaseState] = useState(\"\"); // 현재 확진자\r\n    // const [stateCase, setCaseState] = useState(\"\"); // 총 확진자\r\n    // const [stateRecovery, setRecoveryState] = useState(\"\"); // 격리해제\r\n\r\n    var axios = require(\"axios\").default;\r\n\r\n    var options = {\r\n        method: 'GET',\r\n        url: `https://worldometers.p.rapidapi.com/api/coronavirus/country/${data.name}`,\r\n        headers: {\r\n            'x-rapidapi-key': 'fcb0e402d7mshc5c03f6430070b2p126faejsnc1e229da87f1',\r\n            'x-rapidapi-host': 'worldometers.p.rapidapi.com'\r\n        }\r\n    };\r\n\r\n    axios.request(options).then(function(response:any) {\r\n        // setPopulationState(response.data.data['Population'].replace(/,/g,''));\r\n        // setTestState(response.data.data['Total Tests'].replace(/,/g,''));\r\n        // setDeathState(response.data.data['Total Deaths'].replace(/,/g,''));\r\n        // setActivityCaseState(response.data.data['Active Cases'].replace(/,/g,''));\r\n        // setCaseState(response.data.data['Total Cases'].replace(/,/g,''));\r\n        // setRecoveryState(response.data.data['Total Recovered'].replace(/,/g,''));\r\n        setState(response.data.data[value[data.value]].replace(/,/g,''));\r\n    }).catch(function (error:any) {\r\n        console.error(error);\r\n    });\r\n\r\n    return (\r\n        // <div>\r\n        //     <p className=\"Population\">{statePopulation}</p>\r\n        //     <p className=\"Test\">{stateTest}</p>\r\n        //     <p className=\"Death\">{stateDeath}</p>\r\n        //     <p className=\"ActivityCase\">{stateActivityCase}</p>\r\n        //     <p className=\"Case\">{stateCase}</p>\r\n        //     <p className=\"Recovery\">{stateRecovery}</p>\r\n        // </div>\r\n        <p>{state}</p>\r\n    )\r\n\r\n}\r\nexport default Corona;","import * as React from 'react';\r\nimport {useState} from 'react';\r\n\r\nconst country = [{\"iso\":\"AF\",\"cName\":\"Afghanistan\"},{\"iso\":\"AX\",\"cName\":\"Aland Islands\"},{\"iso\":\"AL\",\"cName\":\"Albania\"},{\"iso\":\"DZ\",\"cName\":\"Algeria\"},{\"iso\":\"AS\",\"cName\":\"American Samoa\"},{\"iso\":\"AD\",\"cName\":\"Andorra\"},{\"iso\":\"AO\",\"cName\":\"Angola\"},{\"iso\":\"AI\",\"cName\":\"Anguilla\"},{\"iso\":\"AQ\",\"cName\":\"Antarctica\"},{\"iso\":\"AG\",\"cName\":\"Antigua And Barbuda\"},{\"iso\":\"AR\",\"cName\":\"Argentina\"},{\"iso\":\"AM\",\"cName\":\"Armenia\"},{\"iso\":\"AW\",\"cName\":\"Aruba\"},{\"iso\":\"AU\",\"cName\":\"Australia\"},{\"iso\":\"AT\",\"cName\":\"Austria\"},{\"iso\":\"AZ\",\"cName\":\"Azerbaijan\"},{\"iso\":\"BS\",\"cName\":\"Bahamas\"},{\"iso\":\"BH\",\"cName\":\"Bahrain\"},{\"iso\":\"BD\",\"cName\":\"Bangladesh\"},{\"iso\":\"BB\",\"cName\":\"Barbados\"},{\"iso\":\"BY\",\"cName\":\"Belarus\"},{\"iso\":\"BE\",\"cName\":\"Belgium\"},{\"iso\":\"BZ\",\"cName\":\"Belize\"},{\"iso\":\"BJ\",\"cName\":\"Benin\"},{\"iso\":\"BM\",\"cName\":\"Bermuda\"},{\"iso\":\"BT\",\"cName\":\"Bhutan\"},{\"iso\":\"BO\",\"cName\":\"Bolivia\"},{\"iso\":\"BA\",\"cName\":\"Bosnia And Herzegovina\"},{\"iso\":\"BW\",\"cName\":\"Botswana\"},{\"iso\":\"BV\",\"cName\":\"Bouvet Island\"},{\"iso\":\"BR\",\"cName\":\"Brazil\"},{\"iso\":\"IO\",\"cName\":\"British Indian Ocean Territory\"},{\"iso\":\"BN\",\"cName\":\"Brunei Darussalam\"},{\"iso\":\"BG\",\"cName\":\"Bulgaria\"},{\"iso\":\"BF\",\"cName\":\"Burkina Faso\"},{\"iso\":\"BI\",\"cName\":\"Burundi\"},{\"iso\":\"KH\",\"cName\":\"Cambodia\"},{\"iso\":\"CM\",\"cName\":\"Cameroon\"},{\"iso\":\"CA\",\"cName\":\"Canada\"},{\"iso\":\"CV\",\"cName\":\"Cape Verde\"},{\"iso\":\"KY\",\"cName\":\"Cayman Islands\"},{\"iso\":\"CF\",\"cName\":\"Central African Republic\"},{\"iso\":\"TD\",\"cName\":\"Chad\"},{\"iso\":\"CL\",\"cName\":\"Chile\"},{\"iso\":\"CN\",\"cName\":\"China\"},{\"iso\":\"CX\",\"cName\":\"Christmas Island\"},{\"iso\":\"CC\",\"cName\":\"Cocos (Keeling) Islands\"},{\"iso\":\"CO\",\"cName\":\"Colombia\"},{\"iso\":\"KM\",\"cName\":\"Comoros\"},{\"iso\":\"CG\",\"cName\":\"Congo\"},{\"iso\":\"CD\",\"cName\":\"Congo, Democratic Republic\"},{\"iso\":\"CK\",\"cName\":\"Cook Islands\"},{\"iso\":\"CR\",\"cName\":\"Costa Rica\"},{\"iso\":\"CI\",\"cName\":\"Cote D\\\"Ivoire\"},{\"iso\":\"HR\",\"cName\":\"Croatia\"},{\"iso\":\"CU\",\"cName\":\"Cuba\"},{\"iso\":\"CY\",\"cName\":\"Cyprus\"},{\"iso\":\"CZ\",\"cName\":\"Czech Republic\"},{\"iso\":\"DK\",\"cName\":\"Denmark\"},{\"iso\":\"DJ\",\"cName\":\"Djibouti\"},{\"iso\":\"DM\",\"cName\":\"Dominica\"},{\"iso\":\"DO\",\"cName\":\"Dominican Republic\"},{\"iso\":\"EC\",\"cName\":\"Ecuador\"},{\"iso\":\"EG\",\"cName\":\"Egypt\"},{\"iso\":\"SV\",\"cName\":\"El Salvador\"},{\"iso\":\"GQ\",\"cName\":\"Equatorial Guinea\"},{\"iso\":\"ER\",\"cName\":\"Eritrea\"},{\"iso\":\"EE\",\"cName\":\"Estonia\"},{\"iso\":\"ET\",\"cName\":\"Ethiopia\"},{\"iso\":\"FK\",\"cName\":\"Falkland Islands (Malvinas)\"},{\"iso\":\"FO\",\"cName\":\"Faroe Islands\"},{\"iso\":\"FJ\",\"cName\":\"Fiji\"},{\"iso\":\"FI\",\"cName\":\"Finland\"},{\"iso\":\"FR\",\"cName\":\"France\"},{\"iso\":\"GF\",\"cName\":\"French Guiana\"},{\"iso\":\"PF\",\"cName\":\"French Polynesia\"},{\"iso\":\"TF\",\"cName\":\"French Southern Territories\"},{\"iso\":\"GA\",\"cName\":\"Gabon\"},{\"iso\":\"GM\",\"cName\":\"Gambia\"},{\"iso\":\"GE\",\"cName\":\"Georgia\"},{\"iso\":\"DE\",\"cName\":\"Germany\"},{\"iso\":\"GH\",\"cName\":\"Ghana\"},{\"iso\":\"GI\",\"cName\":\"Gibraltar\"},{\"iso\":\"GR\",\"cName\":\"Greece\"},{\"iso\":\"GL\",\"cName\":\"Greenland\"},{\"iso\":\"GD\",\"cName\":\"Grenada\"},{\"iso\":\"GP\",\"cName\":\"Guadeloupe\"},{\"iso\":\"GU\",\"cName\":\"Guam\"},{\"iso\":\"GT\",\"cName\":\"Guatemala\"},{\"iso\":\"GG\",\"cName\":\"Guernsey\"},{\"iso\":\"GN\",\"cName\":\"Guinea\"},{\"iso\":\"GW\",\"cName\":\"Guinea-Bissau\"},{\"iso\":\"GY\",\"cName\":\"Guyana\"},{\"iso\":\"HT\",\"cName\":\"Haiti\"},{\"iso\":\"HM\",\"cName\":\"Heard Island & Mcdonald Islands\"},{\"iso\":\"VA\",\"cName\":\"Holy See (Vatican City State)\"},{\"iso\":\"HN\",\"cName\":\"Honduras\"},{\"iso\":\"HK\",\"cName\":\"Hong Kong\"},{\"iso\":\"HU\",\"cName\":\"Hungary\"},{\"iso\":\"IS\",\"cName\":\"Iceland\"},{\"iso\":\"IN\",\"cName\":\"India\"},{\"iso\":\"ID\",\"cName\":\"Indonesia\"},{\"iso\":\"IR\",\"cName\":\"Iran, Islamic Republic Of\"},{\"iso\":\"IQ\",\"cName\":\"Iraq\"},{\"iso\":\"IE\",\"cName\":\"Ireland\"},{\"iso\":\"IM\",\"cName\":\"Isle Of Man\"},{\"iso\":\"IL\",\"cName\":\"Israel\"},{\"iso\":\"IT\",\"cName\":\"Italy\"},{\"iso\":\"JM\",\"cName\":\"Jamaica\"},{\"iso\":\"JP\",\"cName\":\"Japan\"},{\"iso\":\"JE\",\"cName\":\"Jersey\"},{\"iso\":\"JO\",\"cName\":\"Jordan\"},{\"iso\":\"KZ\",\"cName\":\"Kazakhstan\"},{\"iso\":\"KE\",\"cName\":\"Kenya\"},{\"iso\":\"KI\",\"cName\":\"Kiribati\"},{\"iso\":\"KR\",\"cName\":\"Korea\"},{\"iso\":\"KW\",\"cName\":\"Kuwait\"},{\"iso\":\"KG\",\"cName\":\"Kyrgyzstan\"},{\"iso\":\"LA\",\"cName\":\"Lao People\\\"s Democratic Republic\"},{\"iso\":\"LV\",\"cName\":\"Latvia\"},{\"iso\":\"LB\",\"cName\":\"Lebanon\"},{\"iso\":\"LS\",\"cName\":\"Lesotho\"},{\"iso\":\"LR\",\"cName\":\"Liberia\"},{\"iso\":\"LY\",\"cName\":\"Libyan Arab Jamahiriya\"},{\"iso\":\"LI\",\"cName\":\"Liechtenstein\"},{\"iso\":\"LT\",\"cName\":\"Lithuania\"},{\"iso\":\"LU\",\"cName\":\"Luxembourg\"},{\"iso\":\"MO\",\"cName\":\"Macao\"},{\"iso\":\"MK\",\"cName\":\"Macedonia\"},{\"iso\":\"MG\",\"cName\":\"Madagascar\"},{\"iso\":\"MW\",\"cName\":\"Malawi\"},{\"iso\":\"MY\",\"cName\":\"Malaysia\"},{\"iso\":\"MV\",\"cName\":\"Maldives\"},{\"iso\":\"ML\",\"cName\":\"Mali\"},{\"iso\":\"MT\",\"cName\":\"Malta\"},{\"iso\":\"MH\",\"cName\":\"Marshall Islands\"},{\"iso\":\"MQ\",\"cName\":\"Martinique\"},{\"iso\":\"MR\",\"cName\":\"Mauritania\"},{\"iso\":\"MU\",\"cName\":\"Mauritius\"},{\"iso\":\"YT\",\"cName\":\"Mayotte\"},{\"iso\":\"MX\",\"cName\":\"Mexico\"},{\"iso\":\"FM\",\"cName\":\"Micronesia, Federated States Of\"},{\"iso\":\"MD\",\"cName\":\"Moldova\"},{\"iso\":\"MC\",\"cName\":\"Monaco\"},{\"iso\":\"MN\",\"cName\":\"Mongolia\"},{\"iso\":\"ME\",\"cName\":\"Montenegro\"},{\"iso\":\"MS\",\"cName\":\"Montserrat\"},{\"iso\":\"MA\",\"cName\":\"Morocco\"},{\"iso\":\"MZ\",\"cName\":\"Mozambique\"},{\"iso\":\"MM\",\"cName\":\"Myanmar\"},{\"iso\":\"NA\",\"cName\":\"Namibia\"},{\"iso\":\"NR\",\"cName\":\"Nauru\"},{\"iso\":\"NP\",\"cName\":\"Nepal\"},{\"iso\":\"NL\",\"cName\":\"Netherlands\"},{\"iso\":\"AN\",\"cName\":\"Netherlands Antilles\"},{\"iso\":\"NC\",\"cName\":\"New Caledonia\"},{\"iso\":\"NZ\",\"cName\":\"New Zealand\"},{\"iso\":\"NI\",\"cName\":\"Nicaragua\"},{\"iso\":\"NE\",\"cName\":\"Niger\"},{\"iso\":\"NG\",\"cName\":\"Nigeria\"},{\"iso\":\"NU\",\"cName\":\"Niue\"},{\"iso\":\"NF\",\"cName\":\"Norfolk Island\"},{\"iso\":\"MP\",\"cName\":\"Northern Mariana Islands\"},{\"iso\":\"NO\",\"cName\":\"Norway\"},{\"iso\":\"OM\",\"cName\":\"Oman\"},{\"iso\":\"PK\",\"cName\":\"Pakistan\"},{\"iso\":\"PW\",\"cName\":\"Palau\"},{\"iso\":\"PS\",\"cName\":\"Palestinian Territory, Occupied\"},{\"iso\":\"PA\",\"cName\":\"Panama\"},{\"iso\":\"PG\",\"cName\":\"Papua New Guinea\"},{\"iso\":\"PY\",\"cName\":\"Paraguay\"},{\"iso\":\"PE\",\"cName\":\"Peru\"},{\"iso\":\"PH\",\"cName\":\"Philippines\"},{\"iso\":\"PN\",\"cName\":\"Pitcairn\"},{\"iso\":\"PL\",\"cName\":\"Poland\"},{\"iso\":\"PT\",\"cName\":\"Portugal\"},{\"iso\":\"PR\",\"cName\":\"Puerto Rico\"},{\"iso\":\"QA\",\"cName\":\"Qatar\"},{\"iso\":\"RE\",\"cName\":\"Reunion\"},{\"iso\":\"RO\",\"cName\":\"Romania\"},{\"iso\":\"RU\",\"cName\":\"Russian Federation\"},{\"iso\":\"RW\",\"cName\":\"Rwanda\"},{\"iso\":\"BL\",\"cName\":\"Saint Barthelemy\"},{\"iso\":\"SH\",\"cName\":\"Saint Helena\"},{\"iso\":\"KN\",\"cName\":\"Saint Kitts And Nevis\"},{\"iso\":\"LC\",\"cName\":\"Saint Lucia\"},{\"iso\":\"MF\",\"cName\":\"Saint Martin\"},{\"iso\":\"PM\",\"cName\":\"Saint Pierre And Miquelon\"},{\"iso\":\"VC\",\"cName\":\"Saint Vincent And Grenadines\"},{\"iso\":\"WS\",\"cName\":\"Samoa\"},{\"iso\":\"SM\",\"cName\":\"San Marino\"},{\"iso\":\"ST\",\"cName\":\"Sao Tome And Principe\"},{\"iso\":\"SA\",\"cName\":\"Saudi Arabia\"},{\"iso\":\"SN\",\"cName\":\"Senegal\"},{\"iso\":\"RS\",\"cName\":\"Serbia\"},{\"iso\":\"SC\",\"cName\":\"Seychelles\"},{\"iso\":\"SL\",\"cName\":\"Sierra Leone\"},{\"iso\":\"SG\",\"cName\":\"Singapore\"},{\"iso\":\"SK\",\"cName\":\"Slovakia\"},{\"iso\":\"SI\",\"cName\":\"Slovenia\"},{\"iso\":\"SB\",\"cName\":\"Solomon Islands\"},{\"iso\":\"SO\",\"cName\":\"Somalia\"},{\"iso\":\"ZA\",\"cName\":\"South Africa\"},{\"iso\":\"GS\",\"cName\":\"South Georgia And Sandwich Isl.\"},{\"iso\":\"ES\",\"cName\":\"Spain\"},{\"iso\":\"LK\",\"cName\":\"Sri Lanka\"},{\"iso\":\"SD\",\"cName\":\"Sudan\"},{\"iso\":\"SR\",\"cName\":\"Suriname\"},{\"iso\":\"SJ\",\"cName\":\"Svalbard And Jan Mayen\"},{\"iso\":\"SZ\",\"cName\":\"Swaziland\"},{\"iso\":\"SE\",\"cName\":\"Sweden\"},{\"iso\":\"CH\",\"cName\":\"Switzerland\"},{\"iso\":\"SY\",\"cName\":\"Syrian Arab Republic\"},{\"iso\":\"TW\",\"cName\":\"Taiwan\"},{\"iso\":\"TJ\",\"cName\":\"Tajikistan\"},{\"iso\":\"TZ\",\"cName\":\"Tanzania\"},{\"iso\":\"TH\",\"cName\":\"Thailand\"},{\"iso\":\"TL\",\"cName\":\"Timor-Leste\"},{\"iso\":\"TG\",\"cName\":\"Togo\"},{\"iso\":\"TK\",\"cName\":\"Tokelau\"},{\"iso\":\"TO\",\"cName\":\"Tonga\"},{\"iso\":\"TT\",\"cName\":\"Trinidad And Tobago\"},{\"iso\":\"TN\",\"cName\":\"Tunisia\"},{\"iso\":\"TR\",\"cName\":\"Turkey\"},{\"iso\":\"TM\",\"cName\":\"Turkmenistan\"},{\"iso\":\"TC\",\"cName\":\"Turks And Caicos Islands\"},{\"iso\":\"TV\",\"cName\":\"Tuvalu\"},{\"iso\":\"UG\",\"cName\":\"Uganda\"},{\"iso\":\"UA\",\"cName\":\"Ukraine\"},{\"iso\":\"AE\",\"cName\":\"United Arab Emirates\"},{\"iso\":\"GB\",\"cName\":\"United Kingdom\"},{\"iso\":\"US\",\"cName\":\"United States\"},{\"iso\":\"UM\",\"cName\":\"United States Outlying Islands\"},{\"iso\":\"UY\",\"cName\":\"Uruguay\"},{\"iso\":\"UZ\",\"cName\":\"Uzbekistan\"},{\"iso\":\"VU\",\"cName\":\"Vanuatu\"},{\"iso\":\"VE\",\"cName\":\"Venezuela\"},{\"iso\":\"VN\",\"cName\":\"Viet Nam\"},{\"iso\":\"VG\",\"cName\":\"Virgin Islands, British\"},{\"iso\":\"VI\",\"cName\":\"Virgin Islands, U.S.\"},{\"iso\":\"WF\",\"cName\":\"Wallis And Futuna\"},{\"iso\":\"EH\",\"cName\":\"Western Sahara\"},{\"iso\":\"YE\",\"cName\":\"Yemen\"},{\"iso\":\"ZM\",\"cName\":\"Zambia\"},{\"iso\":\"ZW\",\"cName\":\"Zimbabwe\"}];\r\n// // var country = {\"Afghanistan\":\"AF\",\"Aland Islands\":\"AX\",\"Albania\":\"AL\",\"Algeria\":\"DZ\",\"American Samoa\":\"AS\",\"Andorra\":\"AD\",\"Angola\":\"AO\",\"Anguilla\":\"AI\",\"Antarctica\":\"AQ\",\"Antigua And Barbuda\":\"AG\",\"Argentina\":\"AR\",\"Armenia\":\"AM\",\"Aruba\":\"AW\",\"Australia\":\"AU\",\"Austria\":\"AT\",\"Azerbaijan\":\"AZ\",\"Bahamas\":\"BS\",\"Bahrain\":\"BH\",\"Bangladesh\":\"BD\",\"Barbados\":\"BB\",\"Belarus\":\"BY\",\"Belgium\":\"BE\",\"Belize\":\"BZ\",\"Benin\":\"BJ\",\"Bermuda\":\"BM\",\"Bhutan\":\"BT\",\"Bolivia\":\"BO\",\"Bosnia And Herzegovina\":\"BA\",\"Botswana\":\"BW\",\"Bouvet Island\":\"BV\",\"Brazil\":\"BR\",\"British Indian Ocean Territory\":\"IO\",\"Brunei Darussalam\":\"BN\",\"Bulgaria\":\"BG\",\"Burkina Faso\":\"BF\",\"Burundi\":\"BI\",\"Cambodia\":\"KH\",\"Cameroon\":\"CM\",\"Canada\":\"CA\",\"Cape Verde\":\"CV\",\"Cayman Islands\":\"KY\",\"Central African Republic\":\"CF\",\"Chad\":\"TD\",\"Chile\":\"CL\",\"China\":\"CN\",\"Christmas Island\":\"CX\",\"Cocos (Keeling) Islands\":\"CC\",\"Colombia\":\"CO\",\"Comoros\":\"KM\",\"Congo\":\"CG\",\"Congo, Democratic Republic\":\"CD\",\"Cook Islands\":\"CK\",\"Costa Rica\":\"CR\",\"Cote D\\\"Ivoire\":\"CI\",\"Croatia\":\"HR\",\"Cuba\":\"CU\",\"Cyprus\":\"CY\",\"Czech Republic\":\"CZ\",\"Denmark\":\"DK\",\"Djibouti\":\"DJ\",\"Dominica\":\"DM\",\"Dominican Republic\":\"DO\",\"Ecuador\":\"EC\",\"Egypt\":\"EG\",\"El Salvador\":\"SV\",\"Equatorial Guinea\":\"GQ\",\"Eritrea\":\"ER\",\"Estonia\":\"EE\",\"Ethiopia\":\"ET\",\"Falkland Islands (Malvinas)\":\"FK\",\"Faroe Islands\":\"FO\",\"Fiji\":\"FJ\",\"Finland\":\"FI\",\"France\":\"FR\",\"French Guiana\":\"GF\",\"French Polynesia\":\"PF\",\"French Southern Territories\":\"TF\",\"Gabon\":\"GA\",\"Gambia\":\"GM\",\"Georgia\":\"GE\",\"Germany\":\"DE\",\"Ghana\":\"GH\",\"Gibraltar\":\"GI\",\"Greece\":\"GR\",\"Greenland\":\"GL\",\"Grenada\":\"GD\",\"Guadeloupe\":\"GP\",\"Guam\":\"GU\",\"Guatemala\":\"GT\",\"Guernsey\":\"GG\",\"Guinea\":\"GN\",\"Guinea-Bissau\":\"GW\",\"Guyana\":\"GY\",\"Haiti\":\"HT\",\"Heard Island & Mcdonald Islands\":\"HM\",\"Holy See (Vatican City State)\":\"VA\",\"Honduras\":\"HN\",\"Hong Kong\":\"HK\",\"Hungary\":\"HU\",\"Iceland\":\"IS\",\"India\":\"IN\",\"Indonesia\":\"ID\",\"Iran, Islamic Republic Of\":\"IR\",\"Iraq\":\"IQ\",\"Ireland\":\"IE\",\"Isle Of Man\":\"IM\",\"Israel\":\"IL\",\"Italy\":\"IT\",\"Jamaica\":\"JM\",\"Japan\":\"JP\",\"Jersey\":\"JE\",\"Jordan\":\"JO\",\"Kazakhstan\":\"KZ\",\"Kenya\":\"KE\",\"Kiribati\":\"KI\",\"Korea\":\"KR\",\"Kuwait\":\"KW\",\"Kyrgyzstan\":\"KG\",\"Lao People\\\"s Democratic Republic\":\"LA\",\"Latvia\":\"LV\",\"Lebanon\":\"LB\",\"Lesotho\":\"LS\",\"Liberia\":\"LR\",\"Libyan Arab Jamahiriya\":\"LY\",\"Liechtenstein\":\"LI\",\"Lithuania\":\"LT\",\"Luxembourg\":\"LU\",\"Macao\":\"MO\",\"Macedonia\":\"MK\",\"Madagascar\":\"MG\",\"Malawi\":\"MW\",\"Malaysia\":\"MY\",\"Maldives\":\"MV\",\"Mali\":\"ML\",\"Malta\":\"MT\",\"Marshall Islands\":\"MH\",\"Martinique\":\"MQ\",\"Mauritania\":\"MR\",\"Mauritius\":\"MU\",\"Mayotte\":\"YT\",\"Mexico\":\"MX\",\"Micronesia, Federated States Of\":\"FM\",\"Moldova\":\"MD\",\"Monaco\":\"MC\",\"Mongolia\":\"MN\",\"Montenegro\":\"ME\",\"Montserrat\":\"MS\",\"Morocco\":\"MA\",\"Mozambique\":\"MZ\",\"Myanmar\":\"MM\",\"Namibia\":\"NA\",\"Nauru\":\"NR\",\"Nepal\":\"NP\",\"Netherlands\":\"NL\",\"Netherlands Antilles\":\"AN\",\"New Caledonia\":\"NC\",\"New Zealand\":\"NZ\",\"Nicaragua\":\"NI\",\"Niger\":\"NE\",\"Nigeria\":\"NG\",\"Niue\":\"NU\",\"Norfolk Island\":\"NF\",\"Northern Mariana Islands\":\"MP\",\"Norway\":\"NO\",\"Oman\":\"OM\",\"Pakistan\":\"PK\",\"Palau\":\"PW\",\"Palestinian Territory, Occupied\":\"PS\",\"Panama\":\"PA\",\"Papua New Guinea\":\"PG\",\"Paraguay\":\"PY\",\"Peru\":\"PE\",\"Philippines\":\"PH\",\"Pitcairn\":\"PN\",\"Poland\":\"PL\",\"Portugal\":\"PT\",\"Puerto Rico\":\"PR\",\"Qatar\":\"QA\",\"Reunion\":\"RE\",\"Romania\":\"RO\",\"Russian Federation\":\"RU\",\"Rwanda\":\"RW\",\"Saint Barthelemy\":\"BL\",\"Saint Helena\":\"SH\",\"Saint Kitts And Nevis\":\"KN\",\"Saint Lucia\":\"LC\",\"Saint Martin\":\"MF\",\"Saint Pierre And Miquelon\":\"PM\",\"Saint Vincent And Grenadines\":\"VC\",\"Samoa\":\"WS\",\"San Marino\":\"SM\",\"Sao Tome And Principe\":\"ST\",\"Saudi Arabia\":\"SA\",\"Senegal\":\"SN\",\"Serbia\":\"RS\",\"Seychelles\":\"SC\",\"Sierra Leone\":\"SL\",\"Singapore\":\"SG\",\"Slovakia\":\"SK\",\"Slovenia\":\"SI\",\"Solomon Islands\":\"SB\",\"Somalia\":\"SO\",\"South Africa\":\"ZA\",\"South Georgia And Sandwich Isl.\":\"GS\",\"Spain\":\"ES\",\"Sri Lanka\":\"LK\",\"Sudan\":\"SD\",\"Suriname\":\"SR\",\"Svalbard And Jan Mayen\":\"SJ\",\"Swaziland\":\"SZ\",\"Sweden\":\"SE\",\"Switzerland\":\"CH\",\"Syrian Arab Republic\":\"SY\",\"Taiwan\":\"TW\",\"Tajikistan\":\"TJ\",\"Tanzania\":\"TZ\",\"Thailand\":\"TH\",\"Timor-Leste\":\"TL\",\"Togo\":\"TG\",\"Tokelau\":\"TK\",\"Tonga\":\"TO\",\"Trinidad And Tobago\":\"TT\",\"Tunisia\":\"TN\",\"Turkey\":\"TR\",\"Turkmenistan\":\"TM\",\"Turks And Caicos Islands\":\"TC\",\"Tuvalu\":\"TV\",\"Uganda\":\"UG\",\"Ukraine\":\"UA\",\"United Arab Emirates\":\"AE\",\"United Kingdom\":\"GB\",\"United States\":\"US\",\"United States Outlying Islands\":\"UM\",\"Uruguay\":\"UY\",\"Uzbekistan\":\"UZ\",\"Vanuatu\":\"VU\",\"Venezuela\":\"VE\",\"Viet Nam\":\"VN\",\"Virgin Islands, British\":\"VG\",\"Virgin Islands, U.S.\":\"VI\",\"Wallis And Futuna\":\"WF\",\"Western Sahara\":\"EH\",\"Yemen\":\"YE\",\"Zambia\":\"ZM\",\"Zimbabwe\":\"ZW\"};\r\ninterface Flag {\r\n    name:string\r\n}\r\n\r\nconst Flag: React.FC<Flag> = (name) => {\r\n    \r\n    const result_1:number = country.findIndex(e=>e.cName===name.name);\r\n    let firstCountry:string = \"\"; \r\n    console.log(result_1)\r\n    if(result_1 !== -1){\r\n        firstCountry = country[result_1].iso;\r\n    }\r\n    console.log(firstCountry)\r\n    console.log(`https://purecatamphetamine.github.io/country-flag-icons/3x2/${firstCountry}.svg`)\r\n    return(\r\n        <div>\r\n            <img width=\"100px\" height=\"50px\" src={`https://purecatamphetamine.github.io/country-flag-icons/3x2/${firstCountry}.svg`} alt=\"flag\" />\r\n            {/* <img src= {` http://upload.wikimedia.org/wikipedia/commons/8/88/Flag_of_${name.name}_%28converted%29.svg`} alt=\"test\" /> */}\r\n        \r\n        </div>\r\n    ); };\r\n    // http://upload.wikimedia.org/wikipedia/commons/8/88/Flag_of_Australia_%28converted%29.svg\r\nFlag.defaultProps = {\r\n    name : 'Korea',\r\n}\r\n\r\nexport default Flag;"," import * as React from 'react';\r\n// import Population from '../../Api/Population';\r\nimport Corona from '../../Api/Corona';\r\nimport Flag from '../../Api/Flag'\r\n//:{first:string,second:string}\r\ninterface Info{\r\n  first:string;\r\n  second:string;\r\n}\r\nconst CountryInfo : React.FC<Info> =({first,second})=> {\r\n    //country.first //country.second\r\n  //   const NameToISO = (name:string) => {\r\n  //     let country = [{\"cName\":\"USA\",\"iso\":\"US\"},{\"cName\":\"India\",\"iso\":\"IN\"},{\"cName\":\"Brazil\",\"iso\":\"BR\"},{\"cName\":\"Russia\",\"iso\":\"RU\"},{\"cName\":\"France\",\"iso\":\"FR\"},{\"cName\":\"Turkey\",\"iso\":\"TR\"},{\"cName\":\"UK\",\"iso\":\"GB\"},{\"cName\":\"Argentina\",\"iso\":\"AR\"},{\"cName\":\"Colombia\",\"iso\":\"CO\"},{\"cName\":\"Italy\",\"iso\":\"IT\"},{\"cName\":\"Spain\",\"iso\":\"ES\"},{\"cName\":\"Germany\",\"iso\":\"DE\"},{\"cName\":\"Iran\",\"iso\":\"IR\"},{\"cName\":\"Poland\",\"iso\":\"PL\"},{\"cName\":\"Indonesia\",\"iso\":\"ID\"},{\"cName\":\"Mexico\",\"iso\":\"MX\"},{\"cName\":\"SouthAfrica\",\"iso\":\"ZA\"},{\"cName\":\"Ukraine\",\"iso\":\"UA\"},{\"cName\":\"Peru\",\"iso\":\"PE\"},{\"cName\":\"Netherlands\",\"iso\":\"NL\"},{\"cName\":\"Czechia\",\"iso\":\"CZ\"},{\"cName\":\"Chile\",\"iso\":\"CL\"},{\"cName\":\"Philippines\",\"iso\":\"PH\"},{\"cName\":\"Iraq\",\"iso\":\"IQ\"},{\"cName\":\"Canada\",\"iso\":\"CA\"},{\"cName\":\"Belgium\",\"iso\":\"BE\"},{\"cName\":\"Sweden\",\"iso\":\"SE\"},{\"cName\":\"Bangladesh\",\"iso\":\"BD\"},{\"cName\":\"Romania\",\"iso\":\"RO\"},{\"cName\":\"Pakistan\",\"iso\":\"PK\"},{\"cName\":\"Portugal\",\"iso\":\"PT\"},{\"cName\":\"Malaysia\",\"iso\":\"MY\"},{\"cName\":\"Israel\",\"iso\":\"IL\"},{\"cName\":\"Japan\",\"iso\":\"JP\"},{\"cName\":\"Hungary\",\"iso\":\"HU\"},{\"cName\":\"Jordan\",\"iso\":\"JO\"},{\"cName\":\"Serbia\",\"iso\":\"RS\"},{\"cName\":\"Switzerland\",\"iso\":\"CH\"},{\"cName\":\"Nepal\",\"iso\":\"NP\"},{\"cName\":\"UAE\",\"iso\":\"AE\"},{\"cName\":\"Austria\",\"iso\":\"AT\"},{\"cName\":\"Morocco\",\"iso\":\"MA\"},{\"cName\":\"Lebanon\",\"iso\":\"LB\"},{\"cName\":\"Tunisia\",\"iso\":\"TN\"},{\"cName\":\"SaudiArabia\",\"iso\":\"SA\"},{\"cName\":\"Kazakhstan\",\"iso\":\"KZ\"},{\"cName\":\"Ecuador\",\"iso\":\"EC\"},{\"cName\":\"Bolivia\",\"iso\":\"BO\"},{\"cName\":\"Greece\",\"iso\":\"GR\"},{\"cName\":\"Paraguay\",\"iso\":\"PY\"},{\"cName\":\"Belarus\",\"iso\":\"BY\"},{\"cName\":\"Bulgaria\",\"iso\":\"BG\"},{\"cName\":\"Panama\",\"iso\":\"PA\"},{\"cName\":\"Slovakia\",\"iso\":\"SK\"},{\"cName\":\"Thailand\",\"iso\":\"TH\"},{\"cName\":\"CostaRica\",\"iso\":\"CR\"},{\"cName\":\"Georgia\",\"iso\":\"GE\"},{\"cName\":\"Kuwait\",\"iso\":\"KW\"},{\"cName\":\"Uruguay\",\"iso\":\"UY\"},{\"cName\":\"Croatia\",\"iso\":\"HR\"},{\"cName\":\"Azerbaijan\",\"iso\":\"AZ\"},{\"cName\":\"DominicanRepublic\",\"iso\":\"DO\"},{\"cName\":\"Guatemala\",\"iso\":\"GT\"},{\"cName\":\"Palestine\",\"iso\":\"PS\"},{\"cName\":\"Denmark\",\"iso\":\"DK\"},{\"cName\":\"Venezuela\",\"iso\":\"VE\"},{\"cName\":\"Oman\",\"iso\":\"OM\"},{\"cName\":\"Egypt\",\"iso\":\"EG\"},{\"cName\":\"SriLanka\",\"iso\":\"LK\"},{\"cName\":\"Ireland\",\"iso\":\"IE\"},{\"cName\":\"Lithuania\",\"iso\":\"LT\"},{\"cName\":\"Honduras\",\"iso\":\"HN\"},{\"cName\":\"Ethiopia\",\"iso\":\"ET\"},{\"cName\":\"Cuba\",\"iso\":\"CU\"},{\"cName\":\"Bahrain\",\"iso\":\"BH\"},{\"cName\":\"Slovenia\",\"iso\":\"SI\"},{\"cName\":\"Moldova\",\"iso\":\"MD\"},{\"cName\":\"Armenia\",\"iso\":\"AM\"},{\"cName\":\"Qatar\",\"iso\":\"QA\"},{\"cName\":\"Myanmar\",\"iso\":\"MM\"},{\"cName\":\"Libya\",\"iso\":\"LY\"},{\"cName\":\"BosniaandHerzegovina\",\"iso\":\"BA\"},{\"cName\":\"Kenya\",\"iso\":\"KE\"},{\"cName\":\"Zambia\",\"iso\":\"ZM\"},{\"cName\":\"S.Korea\",\"iso\":\"KR\"},{\"cName\":\"Nigeria\",\"iso\":\"NG\"},{\"cName\":\"NorthMacedonia\",\"iso\":\"MK\"},{\"cName\":\"Algeria\",\"iso\":\"DZ\"},{\"cName\":\"Kyrgyzstan\",\"iso\":\"KG\"},{\"cName\":\"Mongolia\",\"iso\":\"MN\"},{\"cName\":\"Afghanistan\",\"iso\":\"AF\"},{\"cName\":\"Latvia\",\"iso\":\"LV\"},{\"cName\":\"Norway\",\"iso\":\"NO\"},{\"cName\":\"Albania\",\"iso\":\"AL\"},{\"cName\":\"Estonia\",\"iso\":\"EE\"},{\"cName\":\"Uzbekistan\",\"iso\":\"UZ\"},{\"cName\":\"Namibia\",\"iso\":\"NA\"},{\"cName\":\"Montenegro\",\"iso\":\"ME\"},{\"cName\":\"Finland\",\"iso\":\"FI\"},{\"cName\":\"Ghana\",\"iso\":\"GH\"},{\"cName\":\"Mozambique\",\"iso\":\"MZ\"},{\"cName\":\"Uganda\",\"iso\":\"UG\"},{\"cName\":\"Cyprus\",\"iso\":\"CY\"},{\"cName\":\"Botswana\",\"iso\":\"BW\"},{\"cName\":\"ElSalvador\",\"iso\":\"SV\"},{\"cName\":\"Cameroon\",\"iso\":\"CM\"},{\"cName\":\"Zimbabwe\",\"iso\":\"ZW\"},{\"cName\":\"Maldives\",\"iso\":\"MV\"},{\"cName\":\"Luxembourg\",\"iso\":\"LU\"},{\"cName\":\"Cambodia\",\"iso\":\"KH\"},{\"cName\":\"Singapore\",\"iso\":\"SG\"},{\"cName\":\"Rwanda\",\"iso\":\"RW\"},{\"cName\":\"Jamaica\",\"iso\":\"JM\"},{\"cName\":\"IvoryCoast\",\"iso\":\"CI\"},{\"cName\":\"Senegal\",\"iso\":\"SN\"},{\"cName\":\"Vietnam\",\"iso\":\"VN\"},{\"cName\":\"DRC\",\"iso\":\"CD\"},{\"cName\":\"Madagascar\",\"iso\":\"MG\"},{\"cName\":\"Malawi\",\"iso\":\"MW\"},{\"cName\":\"Angola\",\"iso\":\"AO\"},{\"cName\":\"Sudan\",\"iso\":\"SD\"},{\"cName\":\"TrinidadandTobago\",\"iso\":\"TT\"},{\"cName\":\"Réunion\",\"iso\":\"RE\"},{\"cName\":\"CaboVerde\",\"iso\":\"CV\"},{\"cName\":\"Malta\",\"iso\":\"MT\"},{\"cName\":\"Australia\",\"iso\":\"AU\"},{\"cName\":\"FrenchGuiana\",\"iso\":\"GF\"},{\"cName\":\"Syria\",\"iso\":\"SY\"},{\"cName\":\"Gabon\",\"iso\":\"GA\"},{\"cName\":\"Guinea\",\"iso\":\"GN\"},{\"cName\":\"Suriname\",\"iso\":\"SR\"},{\"cName\":\"Mauritania\",\"iso\":\"MR\"},{\"cName\":\"Guyana\",\"iso\":\"GY\"},{\"cName\":\"Eswatini\",\"iso\":\"SZ\"},{\"cName\":\"Haiti\",\"iso\":\"HT\"},{\"cName\":\"Mayotte\",\"iso\":\"YT\"},{\"cName\":\"FrenchPolynesia\",\"iso\":\"PF\"},{\"cName\":\"Guadeloupe\",\"iso\":\"GP\"},{\"cName\":\"PapuaNewGuinea\",\"iso\":\"PG\"},{\"cName\":\"Seychelles\",\"iso\":\"SC\"},{\"cName\":\"Taiwan\",\"iso\":\"TW\"},{\"cName\":\"Fiji\",\"iso\":\"FJ\"},{\"cName\":\"Somalia\",\"iso\":\"SO\"},{\"cName\":\"Togo\",\"iso\":\"TG\"},{\"cName\":\"Mali\",\"iso\":\"ML\"},{\"cName\":\"Andorra\",\"iso\":\"AD\"},{\"cName\":\"Tajikistan\",\"iso\":\"TJ\"},{\"cName\":\"Belize\",\"iso\":\"BZ\"},{\"cName\":\"BurkinaFaso\",\"iso\":\"BF\"},{\"cName\":\"Bahamas\",\"iso\":\"BS\"},{\"cName\":\"Martinique\",\"iso\":\"MQ\"},{\"cName\":\"Congo\",\"iso\":\"CG\"},{\"cName\":\"Curaçao\",\"iso\":\"CW\"},{\"cName\":\"Lesotho\",\"iso\":\"LS\"},{\"cName\":\"HongKong\",\"iso\":\"HK\"},{\"cName\":\"Djibouti\",\"iso\":\"DJ\"},{\"cName\":\"Aruba\",\"iso\":\"AW\"},{\"cName\":\"SouthSudan\",\"iso\":\"SS\"},{\"cName\":\"Timor-Leste\",\"iso\":\"TL\"},{\"cName\":\"EquatorialGuinea\",\"iso\":\"GQ\"},{\"cName\":\"Nicaragua\",\"iso\":\"NI\"},{\"cName\":\"Benin\",\"iso\":\"BJ\"},{\"cName\":\"CAR\",\"iso\":\"CF\"},{\"cName\":\"Yemen\",\"iso\":\"YE\"},{\"cName\":\"Iceland\",\"iso\":\"IS\"},{\"cName\":\"Gambia\",\"iso\":\"GM\"},{\"cName\":\"Eritrea\",\"iso\":\"ER\"},{\"cName\":\"SierraLeone\",\"iso\":\"SL\"},{\"cName\":\"Burundi\",\"iso\":\"BI\"},{\"cName\":\"Niger\",\"iso\":\"NE\"},{\"cName\":\"SaintLucia\",\"iso\":\"LC\"},{\"cName\":\"Liberia\",\"iso\":\"LR\"},{\"cName\":\"SanMarino\",\"iso\":\"SM\"},{\"cName\":\"Chad\",\"iso\":\"TD\"},{\"cName\":\"Gibraltar\",\"iso\":\"GI\"},{\"cName\":\"Barbados\",\"iso\":\"BB\"},{\"cName\":\"Guinea-Bissau\",\"iso\":\"GW\"},{\"cName\":\"Comoros\",\"iso\":\"KM\"},{\"cName\":\"Laos\",\"iso\":\"LA\"},{\"cName\":\"Liechtenstein\",\"iso\":\"LI\"},{\"cName\":\"NewZealand\",\"iso\":\"NZ\"},{\"cName\":\"Monaco\",\"iso\":\"MC\"},{\"cName\":\"SintMaarten\",\"iso\":\"SX\"},{\"cName\":\"Bermuda\",\"iso\":\"BM\"},{\"cName\":\"TurksandCaicos\",\"iso\":\"TC\"},{\"cName\":\"SaintMartin\",\"iso\":\"MF\"},{\"cName\":\"SaoTomeandPrincipe\",\"iso\":\"ST\"},{\"cName\":\"Bhutan\",\"iso\":\"BT\"},{\"cName\":\"St.VincentGrenadines\",\"iso\":\"VC\"},{\"cName\":\"BritishVirginIslands\",\"iso\":\"VG\"},{\"cName\":\"IsleofMan\",\"iso\":\"IM\"},{\"cName\":\"Mauritius\",\"iso\":\"MU\"},{\"cName\":\"CaribbeanNetherlands\",\"iso\":\"BQ\"},{\"cName\":\"AntiguaandBarbuda\",\"iso\":\"AG\"},{\"cName\":\"St.Barth\",\"iso\":\"BL\"},{\"cName\":\"FaeroeIslands\",\"iso\":\"FO\"},{\"cName\":\"CaymanIslands\",\"iso\":\"KY\"},{\"cName\":\"SaintKittsandNevis\",\"iso\":\"KN\"},{\"cName\":\"Tanzania\",\"iso\":\"TZ\"},{\"cName\":\"WallisandFutuna\",\"iso\":\"WF\"},{\"cName\":\"Brunei\",\"iso\":\"BN\"},{\"cName\":\"Dominica\",\"iso\":\"DM\"},{\"cName\":\"Grenada\",\"iso\":\"GD\"},{\"cName\":\"NewCaledonia\",\"iso\":\"NC\"},{\"cName\":\"Anguilla\",\"iso\":\"AI\"},{\"cName\":\"Greenland\",\"iso\":\"GL\"},{\"cName\":\"FalklandIslands\",\"iso\":\"FK\"},{\"cName\":\"Macao\",\"iso\":\"MO\"},{\"cName\":\"VaticanCity\",\"iso\":\"VA\"},{\"cName\":\"SaintPierreMiquelon\",\"iso\":\"PM\"},{\"cName\":\"Montserrat\",\"iso\":\"MS\"},{\"cName\":\"SolomonIslands\",\"iso\":\"SB\"},{\"cName\":\"WesternSahara\",\"iso\":\"EH\"},{\"cName\":\"Vanuatu\",\"iso\":\"VU\"},{\"cName\":\"MarshallIslands\",\"iso\":\"MH\"},{\"cName\":\"Samoa\",\"iso\":\"WS\"},{\"cName\":\"SaintHelena\",\"iso\":\"SH\"},{\"cName\":\"China\",\"iso\":\"CN\"}];\r\n  //     return country[country.findIndex(e=>e.cName===name)].iso;\r\n\r\n  // }\r\n    return (\r\n      <div className=\"table_main_info_div\">\r\n        <table className=\"table_main_info\">\r\n          {/* <Flag name={first}/> */}\r\n          {/* <Flag name={second}/> */}\r\n          <tr>\r\n            <td>{first}</td>\r\n            <td colSpan={2}>VS</td>\r\n            <td>{second}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>국기</td>\r\n            <td><p className=\"table_main_info_td_p\">인구 수</p></td>\r\n            <td><p className=\"table_main_info_td_p\">인구 수</p></td>\r\n            <td>국기</td>\r\n          </tr>\r\n          <tr>\r\n            <td><Flag name={first}/></td>\r\n            <td><Corona value={0} name={first}/></td>\r\n            <td><Corona value={0} name={second}/></td>\r\n            <td><Flag name={second}/></td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default CountryInfo;","import * as React from 'react';\r\n// import flag from 'country-flags-svg';\r\n\r\n// import CoronaPopulation from '../../Api/Corona/CoronaPopulation';\r\n// import CoronaCase from '../../Api/Corona/CoronaCase';\r\n// import CoronaActive from '../../Api/Corona/CoronaActive';\r\n// import CoronaDeath from '../../Api/Corona/CoronaDeath';\r\n// import CoronaRecovery from '../../Api/Corona/CoronaRecovery';\r\n// import CoronaTest from '../../Api/Corona/CoronaTest';\r\nimport Corona from '../../Api/Corona';\r\n// import Flag from '../../Api/Flag';\r\n// import Graph from '../../Api/Graph';\r\n\r\n\r\ninterface Info{\r\n    first:string;\r\n    second:string;\r\n  }\r\n\r\nconst CountryTable : React.FC<Info> =(data)=> {\r\n    // const api = require('novelcovid');\r\n    // api.twoDaysAgo.countries({country:'austria'}).then(console.log)\r\n\r\n    let tmp_name1='Korea';\r\n    let tmp_name2='United States';\r\n\r\n    return (\r\n        <table className=\"table_sub_info\">\r\n\r\n            <tr>\r\n                <td><Corona value={1} name={data.first} /></td> {/*first*/}\r\n                <td>총 검사자</td>\r\n                <td><Corona value={1} name={data.second} /></td> {/*second*/}\r\n            </tr>\r\n            <tr>\r\n                <td><Corona value={2} name={data.first} /></td> {/*first*/}\r\n                <td>총 사망자</td>\r\n                <td><Corona value={2} name={data.second} /></td> {/*second*/}\r\n            </tr>\r\n            <tr>\r\n                <td><Corona value={3} name={data.first} /></td> {/*first*/}\r\n                <td>현재 확진자</td>\r\n                <td><Corona value={3} name={data.second} /></td> {/*second*/}\r\n            </tr>\r\n            <tr>\r\n                <td><Corona value={4} name={data.first} /></td> {/*first*/}\r\n                <td>총 확진자</td>\r\n                <td><Corona value={4} name={data.second} /></td> {/*second*/}\r\n            </tr>\r\n            <tr>\r\n                <td><Corona value={5} name={data.first} /></td> {/*first*/}\r\n                <td>격리해제</td>\r\n                <td><Corona value={5} name={data.second} /></td> {/*second*/}\r\n            </tr>\r\n\r\n\r\n        </table>\r\n    );\r\n\r\n}\r\n\r\nexport default CountryTable;","// // import * as React from 'react';\r\n// // import {useState} from 'react';\r\n// // import Iframe from 'react-iframe';\r\n\r\n// // interface Googlee {\r\n// //     iso1:string,\r\n// //     iso2:string,\r\n// //     data:string\r\n// // }\r\n\r\n// // const Graph: React.FC<Googlee> = ((data) => {\r\n\r\n// //     const ISO = require(\"country-iso-2-to-3\");\r\n// //     let iso1 = ISO(data.iso1);\r\n// //     let iso2 = ISO(data.iso2);\r\n\r\n// //     const url:string = `https://www.google.co.kr/publicdata/embed?ds=d5bncppjof8f9_&ctype=l&strail=false&bcs=d&nselm=h&met_y=${data.data}&scale_y=lin&ind_y=false&rdim=world&idim=country:${iso1}:${iso2}&ifdim=world&hl=ko&dl=ko&ind=false`;\r\n\r\n// //     console.log(url);\r\n\r\n// //     return (\r\n// //         <div className=\"graph\">\r\n// //             <Iframe\r\n// //                 className=\"graph_iframe\"\r\n// //                 width=\"400\"\r\n// //                 height=\"325\"\r\n// //                 scrolling=\"no\"\r\n// //                 url={url}\r\n// //             />\r\n// //         </div>\r\n// //     );\r\n\r\n// // });\r\n\r\n// // export default Graph;\r\n\r\nimport * as React from 'react';\r\nimport Iframe from 'react-iframe';\r\n// import '../../css/CountryInputcss.css';\r\n\r\ninterface Info{\r\n    iso1:string;\r\n    iso2:string;\r\n    _data:string;\r\n}    \r\n\r\nvar country = [{\"iso\":\"AF\",\"cName\":\"Afghanistan\"},{\"iso\":\"AX\",\"cName\":\"Aland Islands\"},{\"iso\":\"AL\",\"cName\":\"Albania\"},{\"iso\":\"DZ\",\"cName\":\"Algeria\"},{\"iso\":\"AS\",\"cName\":\"American Samoa\"},{\"iso\":\"AD\",\"cName\":\"Andorra\"},{\"iso\":\"AO\",\"cName\":\"Angola\"},{\"iso\":\"AI\",\"cName\":\"Anguilla\"},{\"iso\":\"AQ\",\"cName\":\"Antarctica\"},{\"iso\":\"AG\",\"cName\":\"Antigua And Barbuda\"},{\"iso\":\"AR\",\"cName\":\"Argentina\"},{\"iso\":\"AM\",\"cName\":\"Armenia\"},{\"iso\":\"AW\",\"cName\":\"Aruba\"},{\"iso\":\"AU\",\"cName\":\"Australia\"},{\"iso\":\"AT\",\"cName\":\"Austria\"},{\"iso\":\"AZ\",\"cName\":\"Azerbaijan\"},{\"iso\":\"BS\",\"cName\":\"Bahamas\"},{\"iso\":\"BH\",\"cName\":\"Bahrain\"},{\"iso\":\"BD\",\"cName\":\"Bangladesh\"},{\"iso\":\"BB\",\"cName\":\"Barbados\"},{\"iso\":\"BY\",\"cName\":\"Belarus\"},{\"iso\":\"BE\",\"cName\":\"Belgium\"},{\"iso\":\"BZ\",\"cName\":\"Belize\"},{\"iso\":\"BJ\",\"cName\":\"Benin\"},{\"iso\":\"BM\",\"cName\":\"Bermuda\"},{\"iso\":\"BT\",\"cName\":\"Bhutan\"},{\"iso\":\"BO\",\"cName\":\"Bolivia\"},{\"iso\":\"BA\",\"cName\":\"Bosnia And Herzegovina\"},{\"iso\":\"BW\",\"cName\":\"Botswana\"},{\"iso\":\"BV\",\"cName\":\"Bouvet Island\"},{\"iso\":\"BR\",\"cName\":\"Brazil\"},{\"iso\":\"IO\",\"cName\":\"British Indian Ocean Territory\"},{\"iso\":\"BN\",\"cName\":\"Brunei Darussalam\"},{\"iso\":\"BG\",\"cName\":\"Bulgaria\"},{\"iso\":\"BF\",\"cName\":\"Burkina Faso\"},{\"iso\":\"BI\",\"cName\":\"Burundi\"},{\"iso\":\"KH\",\"cName\":\"Cambodia\"},{\"iso\":\"CM\",\"cName\":\"Cameroon\"},{\"iso\":\"CA\",\"cName\":\"Canada\"},{\"iso\":\"CV\",\"cName\":\"Cape Verde\"},{\"iso\":\"KY\",\"cName\":\"Cayman Islands\"},{\"iso\":\"CF\",\"cName\":\"Central African Republic\"},{\"iso\":\"TD\",\"cName\":\"Chad\"},{\"iso\":\"CL\",\"cName\":\"Chile\"},{\"iso\":\"CN\",\"cName\":\"China\"},{\"iso\":\"CX\",\"cName\":\"Christmas Island\"},{\"iso\":\"CC\",\"cName\":\"Cocos (Keeling) Islands\"},{\"iso\":\"CO\",\"cName\":\"Colombia\"},{\"iso\":\"KM\",\"cName\":\"Comoros\"},{\"iso\":\"CG\",\"cName\":\"Congo\"},{\"iso\":\"CD\",\"cName\":\"Congo, Democratic Republic\"},{\"iso\":\"CK\",\"cName\":\"Cook Islands\"},{\"iso\":\"CR\",\"cName\":\"Costa Rica\"},{\"iso\":\"CI\",\"cName\":\"Cote D\\\"Ivoire\"},{\"iso\":\"HR\",\"cName\":\"Croatia\"},{\"iso\":\"CU\",\"cName\":\"Cuba\"},{\"iso\":\"CY\",\"cName\":\"Cyprus\"},{\"iso\":\"CZ\",\"cName\":\"Czech Republic\"},{\"iso\":\"DK\",\"cName\":\"Denmark\"},{\"iso\":\"DJ\",\"cName\":\"Djibouti\"},{\"iso\":\"DM\",\"cName\":\"Dominica\"},{\"iso\":\"DO\",\"cName\":\"Dominican Republic\"},{\"iso\":\"EC\",\"cName\":\"Ecuador\"},{\"iso\":\"EG\",\"cName\":\"Egypt\"},{\"iso\":\"SV\",\"cName\":\"El Salvador\"},{\"iso\":\"GQ\",\"cName\":\"Equatorial Guinea\"},{\"iso\":\"ER\",\"cName\":\"Eritrea\"},{\"iso\":\"EE\",\"cName\":\"Estonia\"},{\"iso\":\"ET\",\"cName\":\"Ethiopia\"},{\"iso\":\"FK\",\"cName\":\"Falkland Islands (Malvinas)\"},{\"iso\":\"FO\",\"cName\":\"Faroe Islands\"},{\"iso\":\"FJ\",\"cName\":\"Fiji\"},{\"iso\":\"FI\",\"cName\":\"Finland\"},{\"iso\":\"FR\",\"cName\":\"France\"},{\"iso\":\"GF\",\"cName\":\"French Guiana\"},{\"iso\":\"PF\",\"cName\":\"French Polynesia\"},{\"iso\":\"TF\",\"cName\":\"French Southern Territories\"},{\"iso\":\"GA\",\"cName\":\"Gabon\"},{\"iso\":\"GM\",\"cName\":\"Gambia\"},{\"iso\":\"GE\",\"cName\":\"Georgia\"},{\"iso\":\"DE\",\"cName\":\"Germany\"},{\"iso\":\"GH\",\"cName\":\"Ghana\"},{\"iso\":\"GI\",\"cName\":\"Gibraltar\"},{\"iso\":\"GR\",\"cName\":\"Greece\"},{\"iso\":\"GL\",\"cName\":\"Greenland\"},{\"iso\":\"GD\",\"cName\":\"Grenada\"},{\"iso\":\"GP\",\"cName\":\"Guadeloupe\"},{\"iso\":\"GU\",\"cName\":\"Guam\"},{\"iso\":\"GT\",\"cName\":\"Guatemala\"},{\"iso\":\"GG\",\"cName\":\"Guernsey\"},{\"iso\":\"GN\",\"cName\":\"Guinea\"},{\"iso\":\"GW\",\"cName\":\"Guinea-Bissau\"},{\"iso\":\"GY\",\"cName\":\"Guyana\"},{\"iso\":\"HT\",\"cName\":\"Haiti\"},{\"iso\":\"HM\",\"cName\":\"Heard Island & Mcdonald Islands\"},{\"iso\":\"VA\",\"cName\":\"Holy See (Vatican City State)\"},{\"iso\":\"HN\",\"cName\":\"Honduras\"},{\"iso\":\"HK\",\"cName\":\"Hong Kong\"},{\"iso\":\"HU\",\"cName\":\"Hungary\"},{\"iso\":\"IS\",\"cName\":\"Iceland\"},{\"iso\":\"IN\",\"cName\":\"India\"},{\"iso\":\"ID\",\"cName\":\"Indonesia\"},{\"iso\":\"IR\",\"cName\":\"Iran, Islamic Republic Of\"},{\"iso\":\"IQ\",\"cName\":\"Iraq\"},{\"iso\":\"IE\",\"cName\":\"Ireland\"},{\"iso\":\"IM\",\"cName\":\"Isle Of Man\"},{\"iso\":\"IL\",\"cName\":\"Israel\"},{\"iso\":\"IT\",\"cName\":\"Italy\"},{\"iso\":\"JM\",\"cName\":\"Jamaica\"},{\"iso\":\"JP\",\"cName\":\"Japan\"},{\"iso\":\"JE\",\"cName\":\"Jersey\"},{\"iso\":\"JO\",\"cName\":\"Jordan\"},{\"iso\":\"KZ\",\"cName\":\"Kazakhstan\"},{\"iso\":\"KE\",\"cName\":\"Kenya\"},{\"iso\":\"KI\",\"cName\":\"Kiribati\"},{\"iso\":\"KR\",\"cName\":\"Korea\"},{\"iso\":\"KW\",\"cName\":\"Kuwait\"},{\"iso\":\"KG\",\"cName\":\"Kyrgyzstan\"},{\"iso\":\"LA\",\"cName\":\"Lao People\\\"s Democratic Republic\"},{\"iso\":\"LV\",\"cName\":\"Latvia\"},{\"iso\":\"LB\",\"cName\":\"Lebanon\"},{\"iso\":\"LS\",\"cName\":\"Lesotho\"},{\"iso\":\"LR\",\"cName\":\"Liberia\"},{\"iso\":\"LY\",\"cName\":\"Libyan Arab Jamahiriya\"},{\"iso\":\"LI\",\"cName\":\"Liechtenstein\"},{\"iso\":\"LT\",\"cName\":\"Lithuania\"},{\"iso\":\"LU\",\"cName\":\"Luxembourg\"},{\"iso\":\"MO\",\"cName\":\"Macao\"},{\"iso\":\"MK\",\"cName\":\"Macedonia\"},{\"iso\":\"MG\",\"cName\":\"Madagascar\"},{\"iso\":\"MW\",\"cName\":\"Malawi\"},{\"iso\":\"MY\",\"cName\":\"Malaysia\"},{\"iso\":\"MV\",\"cName\":\"Maldives\"},{\"iso\":\"ML\",\"cName\":\"Mali\"},{\"iso\":\"MT\",\"cName\":\"Malta\"},{\"iso\":\"MH\",\"cName\":\"Marshall Islands\"},{\"iso\":\"MQ\",\"cName\":\"Martinique\"},{\"iso\":\"MR\",\"cName\":\"Mauritania\"},{\"iso\":\"MU\",\"cName\":\"Mauritius\"},{\"iso\":\"YT\",\"cName\":\"Mayotte\"},{\"iso\":\"MX\",\"cName\":\"Mexico\"},{\"iso\":\"FM\",\"cName\":\"Micronesia, Federated States Of\"},{\"iso\":\"MD\",\"cName\":\"Moldova\"},{\"iso\":\"MC\",\"cName\":\"Monaco\"},{\"iso\":\"MN\",\"cName\":\"Mongolia\"},{\"iso\":\"ME\",\"cName\":\"Montenegro\"},{\"iso\":\"MS\",\"cName\":\"Montserrat\"},{\"iso\":\"MA\",\"cName\":\"Morocco\"},{\"iso\":\"MZ\",\"cName\":\"Mozambique\"},{\"iso\":\"MM\",\"cName\":\"Myanmar\"},{\"iso\":\"NA\",\"cName\":\"Namibia\"},{\"iso\":\"NR\",\"cName\":\"Nauru\"},{\"iso\":\"NP\",\"cName\":\"Nepal\"},{\"iso\":\"NL\",\"cName\":\"Netherlands\"},{\"iso\":\"AN\",\"cName\":\"Netherlands Antilles\"},{\"iso\":\"NC\",\"cName\":\"New Caledonia\"},{\"iso\":\"NZ\",\"cName\":\"New Zealand\"},{\"iso\":\"NI\",\"cName\":\"Nicaragua\"},{\"iso\":\"NE\",\"cName\":\"Niger\"},{\"iso\":\"NG\",\"cName\":\"Nigeria\"},{\"iso\":\"NU\",\"cName\":\"Niue\"},{\"iso\":\"NF\",\"cName\":\"Norfolk Island\"},{\"iso\":\"MP\",\"cName\":\"Northern Mariana Islands\"},{\"iso\":\"NO\",\"cName\":\"Norway\"},{\"iso\":\"OM\",\"cName\":\"Oman\"},{\"iso\":\"PK\",\"cName\":\"Pakistan\"},{\"iso\":\"PW\",\"cName\":\"Palau\"},{\"iso\":\"PS\",\"cName\":\"Palestinian Territory, Occupied\"},{\"iso\":\"PA\",\"cName\":\"Panama\"},{\"iso\":\"PG\",\"cName\":\"Papua New Guinea\"},{\"iso\":\"PY\",\"cName\":\"Paraguay\"},{\"iso\":\"PE\",\"cName\":\"Peru\"},{\"iso\":\"PH\",\"cName\":\"Philippines\"},{\"iso\":\"PN\",\"cName\":\"Pitcairn\"},{\"iso\":\"PL\",\"cName\":\"Poland\"},{\"iso\":\"PT\",\"cName\":\"Portugal\"},{\"iso\":\"PR\",\"cName\":\"Puerto Rico\"},{\"iso\":\"QA\",\"cName\":\"Qatar\"},{\"iso\":\"RE\",\"cName\":\"Reunion\"},{\"iso\":\"RO\",\"cName\":\"Romania\"},{\"iso\":\"RU\",\"cName\":\"Russian Federation\"},{\"iso\":\"RW\",\"cName\":\"Rwanda\"},{\"iso\":\"BL\",\"cName\":\"Saint Barthelemy\"},{\"iso\":\"SH\",\"cName\":\"Saint Helena\"},{\"iso\":\"KN\",\"cName\":\"Saint Kitts And Nevis\"},{\"iso\":\"LC\",\"cName\":\"Saint Lucia\"},{\"iso\":\"MF\",\"cName\":\"Saint Martin\"},{\"iso\":\"PM\",\"cName\":\"Saint Pierre And Miquelon\"},{\"iso\":\"VC\",\"cName\":\"Saint Vincent And Grenadines\"},{\"iso\":\"WS\",\"cName\":\"Samoa\"},{\"iso\":\"SM\",\"cName\":\"San Marino\"},{\"iso\":\"ST\",\"cName\":\"Sao Tome And Principe\"},{\"iso\":\"SA\",\"cName\":\"Saudi Arabia\"},{\"iso\":\"SN\",\"cName\":\"Senegal\"},{\"iso\":\"RS\",\"cName\":\"Serbia\"},{\"iso\":\"SC\",\"cName\":\"Seychelles\"},{\"iso\":\"SL\",\"cName\":\"Sierra Leone\"},{\"iso\":\"SG\",\"cName\":\"Singapore\"},{\"iso\":\"SK\",\"cName\":\"Slovakia\"},{\"iso\":\"SI\",\"cName\":\"Slovenia\"},{\"iso\":\"SB\",\"cName\":\"Solomon Islands\"},{\"iso\":\"SO\",\"cName\":\"Somalia\"},{\"iso\":\"ZA\",\"cName\":\"South Africa\"},{\"iso\":\"GS\",\"cName\":\"South Georgia And Sandwich Isl.\"},{\"iso\":\"ES\",\"cName\":\"Spain\"},{\"iso\":\"LK\",\"cName\":\"Sri Lanka\"},{\"iso\":\"SD\",\"cName\":\"Sudan\"},{\"iso\":\"SR\",\"cName\":\"Suriname\"},{\"iso\":\"SJ\",\"cName\":\"Svalbard And Jan Mayen\"},{\"iso\":\"SZ\",\"cName\":\"Swaziland\"},{\"iso\":\"SE\",\"cName\":\"Sweden\"},{\"iso\":\"CH\",\"cName\":\"Switzerland\"},{\"iso\":\"SY\",\"cName\":\"Syrian Arab Republic\"},{\"iso\":\"TW\",\"cName\":\"Taiwan\"},{\"iso\":\"TJ\",\"cName\":\"Tajikistan\"},{\"iso\":\"TZ\",\"cName\":\"Tanzania\"},{\"iso\":\"TH\",\"cName\":\"Thailand\"},{\"iso\":\"TL\",\"cName\":\"Timor-Leste\"},{\"iso\":\"TG\",\"cName\":\"Togo\"},{\"iso\":\"TK\",\"cName\":\"Tokelau\"},{\"iso\":\"TO\",\"cName\":\"Tonga\"},{\"iso\":\"TT\",\"cName\":\"Trinidad And Tobago\"},{\"iso\":\"TN\",\"cName\":\"Tunisia\"},{\"iso\":\"TR\",\"cName\":\"Turkey\"},{\"iso\":\"TM\",\"cName\":\"Turkmenistan\"},{\"iso\":\"TC\",\"cName\":\"Turks And Caicos Islands\"},{\"iso\":\"TV\",\"cName\":\"Tuvalu\"},{\"iso\":\"UG\",\"cName\":\"Uganda\"},{\"iso\":\"UA\",\"cName\":\"Ukraine\"},{\"iso\":\"AE\",\"cName\":\"United Arab Emirates\"},{\"iso\":\"GB\",\"cName\":\"United Kingdom\"},{\"iso\":\"US\",\"cName\":\"United States\"},{\"iso\":\"UM\",\"cName\":\"United States Outlying Islands\"},{\"iso\":\"UY\",\"cName\":\"Uruguay\"},{\"iso\":\"UZ\",\"cName\":\"Uzbekistan\"},{\"iso\":\"VU\",\"cName\":\"Vanuatu\"},{\"iso\":\"VE\",\"cName\":\"Venezuela\"},{\"iso\":\"VN\",\"cName\":\"Viet Nam\"},{\"iso\":\"VG\",\"cName\":\"Virgin Islands, British\"},{\"iso\":\"VI\",\"cName\":\"Virgin Islands, U.S.\"},{\"iso\":\"WF\",\"cName\":\"Wallis And Futuna\"},{\"iso\":\"EH\",\"cName\":\"Western Sahara\"},{\"iso\":\"YE\",\"cName\":\"Yemen\"},{\"iso\":\"ZM\",\"cName\":\"Zambia\"},{\"iso\":\"ZW\",\"cName\":\"Zimbabwe\"}];    \r\nvar data_1 = [{\"value\":\"ny_gdp_pcap_cd\", \"data\":\"1인당 GDP\"},{\"value\":\"fr_inr_lndp\",\"data\":\"가산금리\"},{\"value\":\"cm_mkt_trad_cd\",\"data\":\"거래 주식, 총 금액\"},{\"value\":\"ms_mil_xpnd_zs\",\"data\":\"국방비\"},{\"value\":\"trade_current_us\",\"data\":\"무역액 지수\"},{\"value\":\"st_int_rcpt_cd\",\"data\":\"국제 관광 수입\"},{\"value\":\"sp_dyn_le00_in\",\"data\":\"기대수명\"},{\"value\":\"labor_force\",\"data\":\"노동력\"},{\"value\":\"sp_pop_totl\",\"data\":\"인구 수\"}];\r\n\r\n\r\nconst EconomyGraph : React.FC<Info> =({iso1,iso2,_data})=> {\r\n\r\n    // console.log(iso1, iso2);\r\n    console.log(data_1)\r\n    const ISO = require(\"country-iso-2-to-3\"); // ISO 2 to 3\r\n    const result_1:number = country.findIndex(e=>e.cName===iso1);\r\n    const result_2:number = country.findIndex(e=>e.cName===iso2);\r\n    const result_3:number = data_1.findIndex(e=>e.data===_data); \r\n    // let result_1:string = \"\";\r\n    // let result_2:string = \"\";\r\n    let firstCountry:string = \"\"; \r\n    let secondCountry:string = \"\";\r\n    let dataCountry:string = \"\";\r\n    \r\n    // console.log(result_1);\r\n\r\n    if(result_1 !== -1){\r\n        firstCountry = country[result_1].iso;\r\n        firstCountry = ISO(firstCountry);\r\n    }\r\n\r\n    if(result_2 !== -1){\r\n        secondCountry = country[result_2].iso;\r\n        secondCountry = ISO(secondCountry);\r\n    }\r\n\r\n    if(result_3 !== -1){\r\n        dataCountry = data_1[result_3].value;\r\n    }\r\n    // console.log(firstCountry, secondCountry)\r\n    const url:string = `https://www.google.co.kr/publicdata/embed?ds=d5bncppjof8f9_&ctype=l&strail=false&bcs=d&nselm=h&met_y=${dataCountry}&scale_y=lin&ind_y=false&rdim=world&idim=country:${firstCountry}:${secondCountry}&ifdim=world&hl=ko&dl=ko&ind=false`;\r\n    //data는 추후 변경 예정\r\n    // console.log(url)\r\n    return (\r\n        <div className=\"graph_iframe_div\">\r\n            <Iframe\r\n                className=\"graph_iframe\"\r\n                width=\"400\"\r\n                height=\"325\"\r\n                scrolling=\"no\"\r\n                url={url}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EconomyGraph;","import * as React from 'react';\r\ninterface SearchPreview{\r\n    name:string;\r\n    iso:string;\r\n  }\r\nconst SearchPreview: React.FC<SearchPreview> = ({name,iso}) => {\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{iso}</td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default SearchPreview;","import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport SearchPreview from './SearchPreview';\r\nimport '../../css/CountryInputcss.css';\r\n\r\nvar country = [{\"iso\":\"AF\",\"cName\":\"Afghanistan\"},{\"iso\":\"AX\",\"cName\":\"Aland Islands\"},{\"iso\":\"AL\",\"cName\":\"Albania\"},{\"iso\":\"DZ\",\"cName\":\"Algeria\"},{\"iso\":\"AS\",\"cName\":\"American Samoa\"},{\"iso\":\"AD\",\"cName\":\"Andorra\"},{\"iso\":\"AO\",\"cName\":\"Angola\"},{\"iso\":\"AI\",\"cName\":\"Anguilla\"},{\"iso\":\"AQ\",\"cName\":\"Antarctica\"},{\"iso\":\"AG\",\"cName\":\"Antigua And Barbuda\"},{\"iso\":\"AR\",\"cName\":\"Argentina\"},{\"iso\":\"AM\",\"cName\":\"Armenia\"},{\"iso\":\"AW\",\"cName\":\"Aruba\"},{\"iso\":\"AU\",\"cName\":\"Australia\"},{\"iso\":\"AT\",\"cName\":\"Austria\"},{\"iso\":\"AZ\",\"cName\":\"Azerbaijan\"},{\"iso\":\"BS\",\"cName\":\"Bahamas\"},{\"iso\":\"BH\",\"cName\":\"Bahrain\"},{\"iso\":\"BD\",\"cName\":\"Bangladesh\"},{\"iso\":\"BB\",\"cName\":\"Barbados\"},{\"iso\":\"BY\",\"cName\":\"Belarus\"},{\"iso\":\"BE\",\"cName\":\"Belgium\"},{\"iso\":\"BZ\",\"cName\":\"Belize\"},{\"iso\":\"BJ\",\"cName\":\"Benin\"},{\"iso\":\"BM\",\"cName\":\"Bermuda\"},{\"iso\":\"BT\",\"cName\":\"Bhutan\"},{\"iso\":\"BO\",\"cName\":\"Bolivia\"},{\"iso\":\"BA\",\"cName\":\"Bosnia And Herzegovina\"},{\"iso\":\"BW\",\"cName\":\"Botswana\"},{\"iso\":\"BV\",\"cName\":\"Bouvet Island\"},{\"iso\":\"BR\",\"cName\":\"Brazil\"},{\"iso\":\"IO\",\"cName\":\"British Indian Ocean Territory\"},{\"iso\":\"BN\",\"cName\":\"Brunei Darussalam\"},{\"iso\":\"BG\",\"cName\":\"Bulgaria\"},{\"iso\":\"BF\",\"cName\":\"Burkina Faso\"},{\"iso\":\"BI\",\"cName\":\"Burundi\"},{\"iso\":\"KH\",\"cName\":\"Cambodia\"},{\"iso\":\"CM\",\"cName\":\"Cameroon\"},{\"iso\":\"CA\",\"cName\":\"Canada\"},{\"iso\":\"CV\",\"cName\":\"Cape Verde\"},{\"iso\":\"KY\",\"cName\":\"Cayman Islands\"},{\"iso\":\"CF\",\"cName\":\"Central African Republic\"},{\"iso\":\"TD\",\"cName\":\"Chad\"},{\"iso\":\"CL\",\"cName\":\"Chile\"},{\"iso\":\"CN\",\"cName\":\"China\"},{\"iso\":\"CX\",\"cName\":\"Christmas Island\"},{\"iso\":\"CC\",\"cName\":\"Cocos (Keeling) Islands\"},{\"iso\":\"CO\",\"cName\":\"Colombia\"},{\"iso\":\"KM\",\"cName\":\"Comoros\"},{\"iso\":\"CG\",\"cName\":\"Congo\"},{\"iso\":\"CD\",\"cName\":\"Congo, Democratic Republic\"},{\"iso\":\"CK\",\"cName\":\"Cook Islands\"},{\"iso\":\"CR\",\"cName\":\"Costa Rica\"},{\"iso\":\"CI\",\"cName\":\"Cote D\\\"Ivoire\"},{\"iso\":\"HR\",\"cName\":\"Croatia\"},{\"iso\":\"CU\",\"cName\":\"Cuba\"},{\"iso\":\"CY\",\"cName\":\"Cyprus\"},{\"iso\":\"CZ\",\"cName\":\"Czech Republic\"},{\"iso\":\"DK\",\"cName\":\"Denmark\"},{\"iso\":\"DJ\",\"cName\":\"Djibouti\"},{\"iso\":\"DM\",\"cName\":\"Dominica\"},{\"iso\":\"DO\",\"cName\":\"Dominican Republic\"},{\"iso\":\"EC\",\"cName\":\"Ecuador\"},{\"iso\":\"EG\",\"cName\":\"Egypt\"},{\"iso\":\"SV\",\"cName\":\"El Salvador\"},{\"iso\":\"GQ\",\"cName\":\"Equatorial Guinea\"},{\"iso\":\"ER\",\"cName\":\"Eritrea\"},{\"iso\":\"EE\",\"cName\":\"Estonia\"},{\"iso\":\"ET\",\"cName\":\"Ethiopia\"},{\"iso\":\"FK\",\"cName\":\"Falkland Islands (Malvinas)\"},{\"iso\":\"FO\",\"cName\":\"Faroe Islands\"},{\"iso\":\"FJ\",\"cName\":\"Fiji\"},{\"iso\":\"FI\",\"cName\":\"Finland\"},{\"iso\":\"FR\",\"cName\":\"France\"},{\"iso\":\"GF\",\"cName\":\"French Guiana\"},{\"iso\":\"PF\",\"cName\":\"French Polynesia\"},{\"iso\":\"TF\",\"cName\":\"French Southern Territories\"},{\"iso\":\"GA\",\"cName\":\"Gabon\"},{\"iso\":\"GM\",\"cName\":\"Gambia\"},{\"iso\":\"GE\",\"cName\":\"Georgia\"},{\"iso\":\"DE\",\"cName\":\"Germany\"},{\"iso\":\"GH\",\"cName\":\"Ghana\"},{\"iso\":\"GI\",\"cName\":\"Gibraltar\"},{\"iso\":\"GR\",\"cName\":\"Greece\"},{\"iso\":\"GL\",\"cName\":\"Greenland\"},{\"iso\":\"GD\",\"cName\":\"Grenada\"},{\"iso\":\"GP\",\"cName\":\"Guadeloupe\"},{\"iso\":\"GU\",\"cName\":\"Guam\"},{\"iso\":\"GT\",\"cName\":\"Guatemala\"},{\"iso\":\"GG\",\"cName\":\"Guernsey\"},{\"iso\":\"GN\",\"cName\":\"Guinea\"},{\"iso\":\"GW\",\"cName\":\"Guinea-Bissau\"},{\"iso\":\"GY\",\"cName\":\"Guyana\"},{\"iso\":\"HT\",\"cName\":\"Haiti\"},{\"iso\":\"HM\",\"cName\":\"Heard Island & Mcdonald Islands\"},{\"iso\":\"VA\",\"cName\":\"Holy See (Vatican City State)\"},{\"iso\":\"HN\",\"cName\":\"Honduras\"},{\"iso\":\"HK\",\"cName\":\"Hong Kong\"},{\"iso\":\"HU\",\"cName\":\"Hungary\"},{\"iso\":\"IS\",\"cName\":\"Iceland\"},{\"iso\":\"IN\",\"cName\":\"India\"},{\"iso\":\"ID\",\"cName\":\"Indonesia\"},{\"iso\":\"IR\",\"cName\":\"Iran, Islamic Republic Of\"},{\"iso\":\"IQ\",\"cName\":\"Iraq\"},{\"iso\":\"IE\",\"cName\":\"Ireland\"},{\"iso\":\"IM\",\"cName\":\"Isle Of Man\"},{\"iso\":\"IL\",\"cName\":\"Israel\"},{\"iso\":\"IT\",\"cName\":\"Italy\"},{\"iso\":\"JM\",\"cName\":\"Jamaica\"},{\"iso\":\"JP\",\"cName\":\"Japan\"},{\"iso\":\"JE\",\"cName\":\"Jersey\"},{\"iso\":\"JO\",\"cName\":\"Jordan\"},{\"iso\":\"KZ\",\"cName\":\"Kazakhstan\"},{\"iso\":\"KE\",\"cName\":\"Kenya\"},{\"iso\":\"KI\",\"cName\":\"Kiribati\"},{\"iso\":\"KR\",\"cName\":\"Korea\"},{\"iso\":\"KW\",\"cName\":\"Kuwait\"},{\"iso\":\"KG\",\"cName\":\"Kyrgyzstan\"},{\"iso\":\"LA\",\"cName\":\"Lao People\\\"s Democratic Republic\"},{\"iso\":\"LV\",\"cName\":\"Latvia\"},{\"iso\":\"LB\",\"cName\":\"Lebanon\"},{\"iso\":\"LS\",\"cName\":\"Lesotho\"},{\"iso\":\"LR\",\"cName\":\"Liberia\"},{\"iso\":\"LY\",\"cName\":\"Libyan Arab Jamahiriya\"},{\"iso\":\"LI\",\"cName\":\"Liechtenstein\"},{\"iso\":\"LT\",\"cName\":\"Lithuania\"},{\"iso\":\"LU\",\"cName\":\"Luxembourg\"},{\"iso\":\"MO\",\"cName\":\"Macao\"},{\"iso\":\"MK\",\"cName\":\"Macedonia\"},{\"iso\":\"MG\",\"cName\":\"Madagascar\"},{\"iso\":\"MW\",\"cName\":\"Malawi\"},{\"iso\":\"MY\",\"cName\":\"Malaysia\"},{\"iso\":\"MV\",\"cName\":\"Maldives\"},{\"iso\":\"ML\",\"cName\":\"Mali\"},{\"iso\":\"MT\",\"cName\":\"Malta\"},{\"iso\":\"MH\",\"cName\":\"Marshall Islands\"},{\"iso\":\"MQ\",\"cName\":\"Martinique\"},{\"iso\":\"MR\",\"cName\":\"Mauritania\"},{\"iso\":\"MU\",\"cName\":\"Mauritius\"},{\"iso\":\"YT\",\"cName\":\"Mayotte\"},{\"iso\":\"MX\",\"cName\":\"Mexico\"},{\"iso\":\"FM\",\"cName\":\"Micronesia, Federated States Of\"},{\"iso\":\"MD\",\"cName\":\"Moldova\"},{\"iso\":\"MC\",\"cName\":\"Monaco\"},{\"iso\":\"MN\",\"cName\":\"Mongolia\"},{\"iso\":\"ME\",\"cName\":\"Montenegro\"},{\"iso\":\"MS\",\"cName\":\"Montserrat\"},{\"iso\":\"MA\",\"cName\":\"Morocco\"},{\"iso\":\"MZ\",\"cName\":\"Mozambique\"},{\"iso\":\"MM\",\"cName\":\"Myanmar\"},{\"iso\":\"NA\",\"cName\":\"Namibia\"},{\"iso\":\"NR\",\"cName\":\"Nauru\"},{\"iso\":\"NP\",\"cName\":\"Nepal\"},{\"iso\":\"NL\",\"cName\":\"Netherlands\"},{\"iso\":\"AN\",\"cName\":\"Netherlands Antilles\"},{\"iso\":\"NC\",\"cName\":\"New Caledonia\"},{\"iso\":\"NZ\",\"cName\":\"New Zealand\"},{\"iso\":\"NI\",\"cName\":\"Nicaragua\"},{\"iso\":\"NE\",\"cName\":\"Niger\"},{\"iso\":\"NG\",\"cName\":\"Nigeria\"},{\"iso\":\"NU\",\"cName\":\"Niue\"},{\"iso\":\"NF\",\"cName\":\"Norfolk Island\"},{\"iso\":\"MP\",\"cName\":\"Northern Mariana Islands\"},{\"iso\":\"NO\",\"cName\":\"Norway\"},{\"iso\":\"OM\",\"cName\":\"Oman\"},{\"iso\":\"PK\",\"cName\":\"Pakistan\"},{\"iso\":\"PW\",\"cName\":\"Palau\"},{\"iso\":\"PS\",\"cName\":\"Palestinian Territory, Occupied\"},{\"iso\":\"PA\",\"cName\":\"Panama\"},{\"iso\":\"PG\",\"cName\":\"Papua New Guinea\"},{\"iso\":\"PY\",\"cName\":\"Paraguay\"},{\"iso\":\"PE\",\"cName\":\"Peru\"},{\"iso\":\"PH\",\"cName\":\"Philippines\"},{\"iso\":\"PN\",\"cName\":\"Pitcairn\"},{\"iso\":\"PL\",\"cName\":\"Poland\"},{\"iso\":\"PT\",\"cName\":\"Portugal\"},{\"iso\":\"PR\",\"cName\":\"Puerto Rico\"},{\"iso\":\"QA\",\"cName\":\"Qatar\"},{\"iso\":\"RE\",\"cName\":\"Reunion\"},{\"iso\":\"RO\",\"cName\":\"Romania\"},{\"iso\":\"RU\",\"cName\":\"Russian Federation\"},{\"iso\":\"RW\",\"cName\":\"Rwanda\"},{\"iso\":\"BL\",\"cName\":\"Saint Barthelemy\"},{\"iso\":\"SH\",\"cName\":\"Saint Helena\"},{\"iso\":\"KN\",\"cName\":\"Saint Kitts And Nevis\"},{\"iso\":\"LC\",\"cName\":\"Saint Lucia\"},{\"iso\":\"MF\",\"cName\":\"Saint Martin\"},{\"iso\":\"PM\",\"cName\":\"Saint Pierre And Miquelon\"},{\"iso\":\"VC\",\"cName\":\"Saint Vincent And Grenadines\"},{\"iso\":\"WS\",\"cName\":\"Samoa\"},{\"iso\":\"SM\",\"cName\":\"San Marino\"},{\"iso\":\"ST\",\"cName\":\"Sao Tome And Principe\"},{\"iso\":\"SA\",\"cName\":\"Saudi Arabia\"},{\"iso\":\"SN\",\"cName\":\"Senegal\"},{\"iso\":\"RS\",\"cName\":\"Serbia\"},{\"iso\":\"SC\",\"cName\":\"Seychelles\"},{\"iso\":\"SL\",\"cName\":\"Sierra Leone\"},{\"iso\":\"SG\",\"cName\":\"Singapore\"},{\"iso\":\"SK\",\"cName\":\"Slovakia\"},{\"iso\":\"SI\",\"cName\":\"Slovenia\"},{\"iso\":\"SB\",\"cName\":\"Solomon Islands\"},{\"iso\":\"SO\",\"cName\":\"Somalia\"},{\"iso\":\"ZA\",\"cName\":\"South Africa\"},{\"iso\":\"GS\",\"cName\":\"South Georgia And Sandwich Isl.\"},{\"iso\":\"ES\",\"cName\":\"Spain\"},{\"iso\":\"LK\",\"cName\":\"Sri Lanka\"},{\"iso\":\"SD\",\"cName\":\"Sudan\"},{\"iso\":\"SR\",\"cName\":\"Suriname\"},{\"iso\":\"SJ\",\"cName\":\"Svalbard And Jan Mayen\"},{\"iso\":\"SZ\",\"cName\":\"Swaziland\"},{\"iso\":\"SE\",\"cName\":\"Sweden\"},{\"iso\":\"CH\",\"cName\":\"Switzerland\"},{\"iso\":\"SY\",\"cName\":\"Syrian Arab Republic\"},{\"iso\":\"TW\",\"cName\":\"Taiwan\"},{\"iso\":\"TJ\",\"cName\":\"Tajikistan\"},{\"iso\":\"TZ\",\"cName\":\"Tanzania\"},{\"iso\":\"TH\",\"cName\":\"Thailand\"},{\"iso\":\"TL\",\"cName\":\"Timor-Leste\"},{\"iso\":\"TG\",\"cName\":\"Togo\"},{\"iso\":\"TK\",\"cName\":\"Tokelau\"},{\"iso\":\"TO\",\"cName\":\"Tonga\"},{\"iso\":\"TT\",\"cName\":\"Trinidad And Tobago\"},{\"iso\":\"TN\",\"cName\":\"Tunisia\"},{\"iso\":\"TR\",\"cName\":\"Turkey\"},{\"iso\":\"TM\",\"cName\":\"Turkmenistan\"},{\"iso\":\"TC\",\"cName\":\"Turks And Caicos Islands\"},{\"iso\":\"TV\",\"cName\":\"Tuvalu\"},{\"iso\":\"UG\",\"cName\":\"Uganda\"},{\"iso\":\"UA\",\"cName\":\"Ukraine\"},{\"iso\":\"AE\",\"cName\":\"United Arab Emirates\"},{\"iso\":\"GB\",\"cName\":\"United Kingdom\"},{\"iso\":\"US\",\"cName\":\"United States\"},{\"iso\":\"UM\",\"cName\":\"United States Outlying Islands\"},{\"iso\":\"UY\",\"cName\":\"Uruguay\"},{\"iso\":\"UZ\",\"cName\":\"Uzbekistan\"},{\"iso\":\"VU\",\"cName\":\"Vanuatu\"},{\"iso\":\"VE\",\"cName\":\"Venezuela\"},{\"iso\":\"VN\",\"cName\":\"Viet Nam\"},{\"iso\":\"VG\",\"cName\":\"Virgin Islands, British\"},{\"iso\":\"VI\",\"cName\":\"Virgin Islands, U.S.\"},{\"iso\":\"WF\",\"cName\":\"Wallis And Futuna\"},{\"iso\":\"EH\",\"cName\":\"Western Sahara\"},{\"iso\":\"YE\",\"cName\":\"Yemen\"},{\"iso\":\"ZM\",\"cName\":\"Zambia\"},{\"iso\":\"ZW\",\"cName\":\"Zimbabwe\"}];\r\n\r\n\r\nconst AutoComplete = (data:any) => {\r\n\r\n    var matchName = (name:string, keyword:string) => {\r\n        keyword = keyword.toLowerCase();\r\n        name = name.toLowerCase().substring(0,keyword.length);\r\n        return name===keyword && keyword.length!==0;\r\n    };\r\n    \r\n    var result = country.filter(i=>true===matchName(i.cName,data.keyword));\r\n    \r\n    // console.log(result);\r\n    \r\n    var renderResult = result.map((e,i) => {\r\n        return (\r\n            <SearchPreview\r\n                name={e.cName}\r\n                iso={e.iso}\r\n                key={i}\r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"search_result_div\">    \r\n            <table className='search_result'>\r\n                {renderResult}\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AutoComplete;","import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport {AiOutlineSearch} from 'react-icons/ai';\r\nimport CountryInfo from './CountryInfo'\r\nimport CountryTable from './CountryTable';\r\nimport Flag from '../../Api/Flag';\r\n// import Graph from './EconomyGraph'\r\nimport Graph from '../../Api/Graph';\r\nimport '../../css/CountryInputcss.css'\r\nimport AutoComplete from './Autocomplete'; //TEST\r\n\r\nconst CountryInput =()=> {\r\n    const lookup = require('country-code-lookup')\r\n    const [firstCountryName,setFirstCountryName] = useState(\"\");\r\n    const [secondCountryName,setsecondCountryName] = useState(\"\");\r\n    const [value, setvalue] = useState(\"\");\r\n    console.log(lookup.byCountry('United Kingdom'))\r\n    // const NameToISO = (name:string) => {\r\n    //     let country = [{\"cName\":\"USA\",\"iso\":\"US\"},{\"cName\":\"India\",\"iso\":\"IN\"},{\"cName\":\"Brazil\",\"iso\":\"BR\"},{\"cName\":\"Russia\",\"iso\":\"RU\"},{\"cName\":\"France\",\"iso\":\"FR\"},{\"cName\":\"Turkey\",\"iso\":\"TR\"},{\"cName\":\"UK\",\"iso\":\"GB\"},{\"cName\":\"Argentina\",\"iso\":\"AR\"},{\"cName\":\"Colombia\",\"iso\":\"CO\"},{\"cName\":\"Italy\",\"iso\":\"IT\"},{\"cName\":\"Spain\",\"iso\":\"ES\"},{\"cName\":\"Germany\",\"iso\":\"DE\"},{\"cName\":\"Iran\",\"iso\":\"IR\"},{\"cName\":\"Poland\",\"iso\":\"PL\"},{\"cName\":\"Indonesia\",\"iso\":\"ID\"},{\"cName\":\"Mexico\",\"iso\":\"MX\"},{\"cName\":\"SouthAfrica\",\"iso\":\"ZA\"},{\"cName\":\"Ukraine\",\"iso\":\"UA\"},{\"cName\":\"Peru\",\"iso\":\"PE\"},{\"cName\":\"Netherlands\",\"iso\":\"NL\"},{\"cName\":\"Czechia\",\"iso\":\"CZ\"},{\"cName\":\"Chile\",\"iso\":\"CL\"},{\"cName\":\"Philippines\",\"iso\":\"PH\"},{\"cName\":\"Iraq\",\"iso\":\"IQ\"},{\"cName\":\"Canada\",\"iso\":\"CA\"},{\"cName\":\"Belgium\",\"iso\":\"BE\"},{\"cName\":\"Sweden\",\"iso\":\"SE\"},{\"cName\":\"Bangladesh\",\"iso\":\"BD\"},{\"cName\":\"Romania\",\"iso\":\"RO\"},{\"cName\":\"Pakistan\",\"iso\":\"PK\"},{\"cName\":\"Portugal\",\"iso\":\"PT\"},{\"cName\":\"Malaysia\",\"iso\":\"MY\"},{\"cName\":\"Israel\",\"iso\":\"IL\"},{\"cName\":\"Japan\",\"iso\":\"JP\"},{\"cName\":\"Hungary\",\"iso\":\"HU\"},{\"cName\":\"Jordan\",\"iso\":\"JO\"},{\"cName\":\"Serbia\",\"iso\":\"RS\"},{\"cName\":\"Switzerland\",\"iso\":\"CH\"},{\"cName\":\"Nepal\",\"iso\":\"NP\"},{\"cName\":\"UAE\",\"iso\":\"AE\"},{\"cName\":\"Austria\",\"iso\":\"AT\"},{\"cName\":\"Morocco\",\"iso\":\"MA\"},{\"cName\":\"Lebanon\",\"iso\":\"LB\"},{\"cName\":\"Tunisia\",\"iso\":\"TN\"},{\"cName\":\"SaudiArabia\",\"iso\":\"SA\"},{\"cName\":\"Kazakhstan\",\"iso\":\"KZ\"},{\"cName\":\"Ecuador\",\"iso\":\"EC\"},{\"cName\":\"Bolivia\",\"iso\":\"BO\"},{\"cName\":\"Greece\",\"iso\":\"GR\"},{\"cName\":\"Paraguay\",\"iso\":\"PY\"},{\"cName\":\"Belarus\",\"iso\":\"BY\"},{\"cName\":\"Bulgaria\",\"iso\":\"BG\"},{\"cName\":\"Panama\",\"iso\":\"PA\"},{\"cName\":\"Slovakia\",\"iso\":\"SK\"},{\"cName\":\"Thailand\",\"iso\":\"TH\"},{\"cName\":\"CostaRica\",\"iso\":\"CR\"},{\"cName\":\"Georgia\",\"iso\":\"GE\"},{\"cName\":\"Kuwait\",\"iso\":\"KW\"},{\"cName\":\"Uruguay\",\"iso\":\"UY\"},{\"cName\":\"Croatia\",\"iso\":\"HR\"},{\"cName\":\"Azerbaijan\",\"iso\":\"AZ\"},{\"cName\":\"DominicanRepublic\",\"iso\":\"DO\"},{\"cName\":\"Guatemala\",\"iso\":\"GT\"},{\"cName\":\"Palestine\",\"iso\":\"PS\"},{\"cName\":\"Denmark\",\"iso\":\"DK\"},{\"cName\":\"Venezuela\",\"iso\":\"VE\"},{\"cName\":\"Oman\",\"iso\":\"OM\"},{\"cName\":\"Egypt\",\"iso\":\"EG\"},{\"cName\":\"SriLanka\",\"iso\":\"LK\"},{\"cName\":\"Ireland\",\"iso\":\"IE\"},{\"cName\":\"Lithuania\",\"iso\":\"LT\"},{\"cName\":\"Honduras\",\"iso\":\"HN\"},{\"cName\":\"Ethiopia\",\"iso\":\"ET\"},{\"cName\":\"Cuba\",\"iso\":\"CU\"},{\"cName\":\"Bahrain\",\"iso\":\"BH\"},{\"cName\":\"Slovenia\",\"iso\":\"SI\"},{\"cName\":\"Moldova\",\"iso\":\"MD\"},{\"cName\":\"Armenia\",\"iso\":\"AM\"},{\"cName\":\"Qatar\",\"iso\":\"QA\"},{\"cName\":\"Myanmar\",\"iso\":\"MM\"},{\"cName\":\"Libya\",\"iso\":\"LY\"},{\"cName\":\"BosniaandHerzegovina\",\"iso\":\"BA\"},{\"cName\":\"Kenya\",\"iso\":\"KE\"},{\"cName\":\"Zambia\",\"iso\":\"ZM\"},{\"cName\":\"S.Korea\",\"iso\":\"KR\"},{\"cName\":\"Nigeria\",\"iso\":\"NG\"},{\"cName\":\"NorthMacedonia\",\"iso\":\"MK\"},{\"cName\":\"Algeria\",\"iso\":\"DZ\"},{\"cName\":\"Kyrgyzstan\",\"iso\":\"KG\"},{\"cName\":\"Mongolia\",\"iso\":\"MN\"},{\"cName\":\"Afghanistan\",\"iso\":\"AF\"},{\"cName\":\"Latvia\",\"iso\":\"LV\"},{\"cName\":\"Norway\",\"iso\":\"NO\"},{\"cName\":\"Albania\",\"iso\":\"AL\"},{\"cName\":\"Estonia\",\"iso\":\"EE\"},{\"cName\":\"Uzbekistan\",\"iso\":\"UZ\"},{\"cName\":\"Namibia\",\"iso\":\"NA\"},{\"cName\":\"Montenegro\",\"iso\":\"ME\"},{\"cName\":\"Finland\",\"iso\":\"FI\"},{\"cName\":\"Ghana\",\"iso\":\"GH\"},{\"cName\":\"Mozambique\",\"iso\":\"MZ\"},{\"cName\":\"Uganda\",\"iso\":\"UG\"},{\"cName\":\"Cyprus\",\"iso\":\"CY\"},{\"cName\":\"Botswana\",\"iso\":\"BW\"},{\"cName\":\"ElSalvador\",\"iso\":\"SV\"},{\"cName\":\"Cameroon\",\"iso\":\"CM\"},{\"cName\":\"Zimbabwe\",\"iso\":\"ZW\"},{\"cName\":\"Maldives\",\"iso\":\"MV\"},{\"cName\":\"Luxembourg\",\"iso\":\"LU\"},{\"cName\":\"Cambodia\",\"iso\":\"KH\"},{\"cName\":\"Singapore\",\"iso\":\"SG\"},{\"cName\":\"Rwanda\",\"iso\":\"RW\"},{\"cName\":\"Jamaica\",\"iso\":\"JM\"},{\"cName\":\"IvoryCoast\",\"iso\":\"CI\"},{\"cName\":\"Senegal\",\"iso\":\"SN\"},{\"cName\":\"Vietnam\",\"iso\":\"VN\"},{\"cName\":\"DRC\",\"iso\":\"CD\"},{\"cName\":\"Madagascar\",\"iso\":\"MG\"},{\"cName\":\"Malawi\",\"iso\":\"MW\"},{\"cName\":\"Angola\",\"iso\":\"AO\"},{\"cName\":\"Sudan\",\"iso\":\"SD\"},{\"cName\":\"TrinidadandTobago\",\"iso\":\"TT\"},{\"cName\":\"Réunion\",\"iso\":\"RE\"},{\"cName\":\"CaboVerde\",\"iso\":\"CV\"},{\"cName\":\"Malta\",\"iso\":\"MT\"},{\"cName\":\"Australia\",\"iso\":\"AU\"},{\"cName\":\"FrenchGuiana\",\"iso\":\"GF\"},{\"cName\":\"Syria\",\"iso\":\"SY\"},{\"cName\":\"Gabon\",\"iso\":\"GA\"},{\"cName\":\"Guinea\",\"iso\":\"GN\"},{\"cName\":\"Suriname\",\"iso\":\"SR\"},{\"cName\":\"Mauritania\",\"iso\":\"MR\"},{\"cName\":\"Guyana\",\"iso\":\"GY\"},{\"cName\":\"Eswatini\",\"iso\":\"SZ\"},{\"cName\":\"Haiti\",\"iso\":\"HT\"},{\"cName\":\"Mayotte\",\"iso\":\"YT\"},{\"cName\":\"FrenchPolynesia\",\"iso\":\"PF\"},{\"cName\":\"Guadeloupe\",\"iso\":\"GP\"},{\"cName\":\"PapuaNewGuinea\",\"iso\":\"PG\"},{\"cName\":\"Seychelles\",\"iso\":\"SC\"},{\"cName\":\"Taiwan\",\"iso\":\"TW\"},{\"cName\":\"Fiji\",\"iso\":\"FJ\"},{\"cName\":\"Somalia\",\"iso\":\"SO\"},{\"cName\":\"Togo\",\"iso\":\"TG\"},{\"cName\":\"Mali\",\"iso\":\"ML\"},{\"cName\":\"Andorra\",\"iso\":\"AD\"},{\"cName\":\"Tajikistan\",\"iso\":\"TJ\"},{\"cName\":\"Belize\",\"iso\":\"BZ\"},{\"cName\":\"BurkinaFaso\",\"iso\":\"BF\"},{\"cName\":\"Bahamas\",\"iso\":\"BS\"},{\"cName\":\"Martinique\",\"iso\":\"MQ\"},{\"cName\":\"Congo\",\"iso\":\"CG\"},{\"cName\":\"Curaçao\",\"iso\":\"CW\"},{\"cName\":\"Lesotho\",\"iso\":\"LS\"},{\"cName\":\"HongKong\",\"iso\":\"HK\"},{\"cName\":\"Djibouti\",\"iso\":\"DJ\"},{\"cName\":\"Aruba\",\"iso\":\"AW\"},{\"cName\":\"SouthSudan\",\"iso\":\"SS\"},{\"cName\":\"Timor-Leste\",\"iso\":\"TL\"},{\"cName\":\"EquatorialGuinea\",\"iso\":\"GQ\"},{\"cName\":\"Nicaragua\",\"iso\":\"NI\"},{\"cName\":\"Benin\",\"iso\":\"BJ\"},{\"cName\":\"CAR\",\"iso\":\"CF\"},{\"cName\":\"Yemen\",\"iso\":\"YE\"},{\"cName\":\"Iceland\",\"iso\":\"IS\"},{\"cName\":\"Gambia\",\"iso\":\"GM\"},{\"cName\":\"Eritrea\",\"iso\":\"ER\"},{\"cName\":\"SierraLeone\",\"iso\":\"SL\"},{\"cName\":\"Burundi\",\"iso\":\"BI\"},{\"cName\":\"Niger\",\"iso\":\"NE\"},{\"cName\":\"SaintLucia\",\"iso\":\"LC\"},{\"cName\":\"Liberia\",\"iso\":\"LR\"},{\"cName\":\"SanMarino\",\"iso\":\"SM\"},{\"cName\":\"Chad\",\"iso\":\"TD\"},{\"cName\":\"Gibraltar\",\"iso\":\"GI\"},{\"cName\":\"Barbados\",\"iso\":\"BB\"},{\"cName\":\"Guinea-Bissau\",\"iso\":\"GW\"},{\"cName\":\"Comoros\",\"iso\":\"KM\"},{\"cName\":\"Laos\",\"iso\":\"LA\"},{\"cName\":\"Liechtenstein\",\"iso\":\"LI\"},{\"cName\":\"NewZealand\",\"iso\":\"NZ\"},{\"cName\":\"Monaco\",\"iso\":\"MC\"},{\"cName\":\"SintMaarten\",\"iso\":\"SX\"},{\"cName\":\"Bermuda\",\"iso\":\"BM\"},{\"cName\":\"TurksandCaicos\",\"iso\":\"TC\"},{\"cName\":\"SaintMartin\",\"iso\":\"MF\"},{\"cName\":\"SaoTomeandPrincipe\",\"iso\":\"ST\"},{\"cName\":\"Bhutan\",\"iso\":\"BT\"},{\"cName\":\"St.VincentGrenadines\",\"iso\":\"VC\"},{\"cName\":\"BritishVirginIslands\",\"iso\":\"VG\"},{\"cName\":\"IsleofMan\",\"iso\":\"IM\"},{\"cName\":\"Mauritius\",\"iso\":\"MU\"},{\"cName\":\"CaribbeanNetherlands\",\"iso\":\"BQ\"},{\"cName\":\"AntiguaandBarbuda\",\"iso\":\"AG\"},{\"cName\":\"St.Barth\",\"iso\":\"BL\"},{\"cName\":\"FaeroeIslands\",\"iso\":\"FO\"},{\"cName\":\"CaymanIslands\",\"iso\":\"KY\"},{\"cName\":\"SaintKittsandNevis\",\"iso\":\"KN\"},{\"cName\":\"Tanzania\",\"iso\":\"TZ\"},{\"cName\":\"WallisandFutuna\",\"iso\":\"WF\"},{\"cName\":\"Brunei\",\"iso\":\"BN\"},{\"cName\":\"Dominica\",\"iso\":\"DM\"},{\"cName\":\"Grenada\",\"iso\":\"GD\"},{\"cName\":\"NewCaledonia\",\"iso\":\"NC\"},{\"cName\":\"Anguilla\",\"iso\":\"AI\"},{\"cName\":\"Greenland\",\"iso\":\"GL\"},{\"cName\":\"FalklandIslands\",\"iso\":\"FK\"},{\"cName\":\"Macao\",\"iso\":\"MO\"},{\"cName\":\"VaticanCity\",\"iso\":\"VA\"},{\"cName\":\"SaintPierreMiquelon\",\"iso\":\"PM\"},{\"cName\":\"Montserrat\",\"iso\":\"MS\"},{\"cName\":\"SolomonIslands\",\"iso\":\"SB\"},{\"cName\":\"WesternSahara\",\"iso\":\"EH\"},{\"cName\":\"Vanuatu\",\"iso\":\"VU\"},{\"cName\":\"MarshallIslands\",\"iso\":\"MH\"},{\"cName\":\"Samoa\",\"iso\":\"WS\"},{\"cName\":\"SaintHelena\",\"iso\":\"SH\"},{\"cName\":\"China\",\"iso\":\"CN\"}];\r\n    //     return !country.findIndex(e=>e.cName===name)?'undefined':country[country.findIndex(e=>e.cName===name)].iso;\r\n    // }\r\n\r\n\r\n    \r\n\r\n    const Countrysubmit = () => {\r\n        if(firstCountryName !== '' || secondCountryName !== ''){\r\n            console.log(\"aa\")\r\n        } else {\r\n            console.log(\"bb\")\r\n            //서치버튼을 눌렀을떄\r\n            // console.log(firstCountryName,secondCountryName)\r\n            \r\n        }\r\n    }\r\n\r\n    console.log(firstCountryName);\r\n\r\nreturn (\r\n        <div>\r\n            <div className=\"div_input\">\r\n                <div className=\"div_inputOnly\">\r\n                    <input tabIndex={1} placeholder=\"첫번째 국가를 입력하세요(영문)\" type=\"text\" className=\"input_first\" onChange={e => setFirstCountryName(e.target.value)}/>\r\n                    <AutoComplete\r\n                        keyword={firstCountryName}\r\n                    />\r\n                    <button type=\"submit\" className=\"input_btn\" onClick={Countrysubmit}><AiOutlineSearch/></button>\r\n                    <input tabIndex={2} placeholder=\"두번째 국가를 입력하세요(영문)\" type=\"text\" className=\"input_last\"  onChange={e => setsecondCountryName(e.target.value)}/>\r\n                    <AutoComplete\r\n                        keyword={secondCountryName}\r\n                    />\r\n                </div>\r\n                <div className=\"Flag_div\">\r\n            </div>\r\n            <CountryInfo first={firstCountryName} second={secondCountryName}/>\r\n            <div className=\"div_info\">\r\n                <CountryTable first={firstCountryName} second={secondCountryName}/>\r\n            </div>\r\n            <div className=\"div_select\">\r\n            <input type=\"text\" onChange={e => setvalue(e.target.value)} className=\"option_input\"/>\r\n                <select>\r\n                    <option value=\"ny_gdp_pcap_cd\">1인당 GDP</option>\r\n                    <option value=\"fr_inr_lndp\">가산금리</option>\r\n                    <option value=\"cm_mkt_trad_cd\">거래 주식, 총 금액</option>\r\n                    <option value=\"ms_mil_xpnd_zs\">국방비</option>\r\n                    <option value=\"trade_current_us\">무역액 지수</option>\r\n                    <option value=\"st_int_rcpt_cd\">국제 관광 수입</option>\r\n                    <option value=\"sp_dyn_le00_in\">기대수명</option>\r\n                    <option value=\"labor_force\">노동력</option>\r\n                    <option value=\"sp_pop_totl\">인구 수</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"div_graph\">\r\n                <Graph iso1={firstCountryName} iso2={secondCountryName} _data={value}/>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CountryInput;\r\n","\r\n\r\nimport * as React from 'react';\r\nimport Header from './Semantic/Header';\r\nimport Footer from './Semantic/Footer';\r\nimport CountryInput from './Etc/CountryInput';\r\nimport '../css/Compare.css'\r\n// import './Compare.css'\r\n\r\n\r\n\r\nfunction Compare() {\r\n    return (\r\n        <div className=\"compaaaare\">\r\n            <Header/>\r\n            <CountryInput/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Compare;","import * as React from 'react';\r\nimport Corona from '../../Api/Corona';\r\nimport Flag from '../../Api/Flag'\r\n//:{first:string,second:string}\r\ninterface Info{\r\n    name:string,\r\n}\r\nconst AnalysisInfo : React.FC<Info> =({name})=> {\r\n    //country.first //country.second\r\n    // console.log(name)\r\n    return (\r\n      <div className=\"table_main_info_div\">\r\n        <table className=\"table_main_info\">\r\n            <tr>\r\n                <td>국가 이름</td>\r\n                <td>{name}</td>\r\n            </tr>\r\n            <tr>\r\n                {/* <td>국기</td> */}\r\n                {/* <td><Flag iso={iso}/></td> */}\r\n            </tr>\r\n            <tr>\r\n                <td>국기</td>\r\n                <td><Flag name ={name}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>인구수</td>\r\n                <td><Corona value={0} name={name}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>검사자</td>\r\n                <td><Corona value={1} name={name}/></td>\r\n            </tr>\r\n            \r\n            <tr>\r\n                <td>총 사망자</td>\r\n                <td><Corona value={2} name={name}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>현제 확진자</td>\r\n                <td><Corona value={3} name={name}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>총 확진자</td>\r\n                <td><Corona value={4} name={name}/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>격리 해제</td>\r\n                <td><Corona value={5} name={name}/></td>\r\n            </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default AnalysisInfo;","import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport {AiOutlineSearch} from 'react-icons/ai';\r\nimport AnalysisInfo from './AnalysisInfo';\r\nimport AutoComplete from './Autocomplete'; //TEST\r\nimport Flag from '../../Api/Flag'\r\nimport Corona from '../../Api/Corona';\r\nimport '../../css/analysis.css'\r\n\r\n// import .css from './CountryInput';//도움!\r\n\r\n\r\nconst CountryInput =()=> {\r\n    const [CountryName,setCountryName] = useState(\"\");\r\n    const lookup = require('country-code-lookup')\r\n    console.log( lookup.byCountry(CountryName))\r\n    const Countrysubmit = () =>{\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"div_input2\">\r\n                <input tabIndex={1} placeholder=\"국가를 입력하세요(영문)\" type=\"text\" className=\"input_first2\" onChange={e => setCountryName(e.target.value)}/>\r\n                <button type=\"submit\" className=\"input_btn2\" onClick={Countrysubmit}><AiOutlineSearch/></button>\r\n                <AutoComplete\r\n                    keyword={CountryName}\r\n                />\r\n            </div>\r\n            <div className=\"table_main_info_div\">\r\n            <table className=\"table_main_info\">\r\n                    <AnalysisInfo name = {CountryName}/>\r\n        </table>\r\n      </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n// const Countrysubmit = () => {\r\n    \r\n// const NameToISO = (name:string) => {\r\n//     let country = [{\"cName\":\"USA\",\"iso\":\"US\"},{\"cName\":\"India\",\"iso\":\"IN\"},{\"cName\":\"Brazil\",\"iso\":\"BR\"},{\"cName\":\"Russia\",\"iso\":\"RU\"},{\"cName\":\"France\",\"iso\":\"FR\"},{\"cName\":\"Turkey\",\"iso\":\"TR\"},{\"cName\":\"UK\",\"iso\":\"GB\"},{\"cName\":\"Argentina\",\"iso\":\"AR\"},{\"cName\":\"Colombia\",\"iso\":\"CO\"},{\"cName\":\"Italy\",\"iso\":\"IT\"},{\"cName\":\"Spain\",\"iso\":\"ES\"},{\"cName\":\"Germany\",\"iso\":\"DE\"},{\"cName\":\"Iran\",\"iso\":\"IR\"},{\"cName\":\"Poland\",\"iso\":\"PL\"},{\"cName\":\"Indonesia\",\"iso\":\"ID\"},{\"cName\":\"Mexico\",\"iso\":\"MX\"},{\"cName\":\"SouthAfrica\",\"iso\":\"ZA\"},{\"cName\":\"Ukraine\",\"iso\":\"UA\"},{\"cName\":\"Peru\",\"iso\":\"PE\"},{\"cName\":\"Netherlands\",\"iso\":\"NL\"},{\"cName\":\"Czechia\",\"iso\":\"CZ\"},{\"cName\":\"Chile\",\"iso\":\"CL\"},{\"cName\":\"Philippines\",\"iso\":\"PH\"},{\"cName\":\"Iraq\",\"iso\":\"IQ\"},{\"cName\":\"Canada\",\"iso\":\"CA\"},{\"cName\":\"Belgium\",\"iso\":\"BE\"},{\"cName\":\"Sweden\",\"iso\":\"SE\"},{\"cName\":\"Bangladesh\",\"iso\":\"BD\"},{\"cName\":\"Romania\",\"iso\":\"RO\"},{\"cName\":\"Pakistan\",\"iso\":\"PK\"},{\"cName\":\"Portugal\",\"iso\":\"PT\"},{\"cName\":\"Malaysia\",\"iso\":\"MY\"},{\"cName\":\"Israel\",\"iso\":\"IL\"},{\"cName\":\"Japan\",\"iso\":\"JP\"},{\"cName\":\"Hungary\",\"iso\":\"HU\"},{\"cName\":\"Jordan\",\"iso\":\"JO\"},{\"cName\":\"Serbia\",\"iso\":\"RS\"},{\"cName\":\"Switzerland\",\"iso\":\"CH\"},{\"cName\":\"Nepal\",\"iso\":\"NP\"},{\"cName\":\"UAE\",\"iso\":\"AE\"},{\"cName\":\"Austria\",\"iso\":\"AT\"},{\"cName\":\"Morocco\",\"iso\":\"MA\"},{\"cName\":\"Lebanon\",\"iso\":\"LB\"},{\"cName\":\"Tunisia\",\"iso\":\"TN\"},{\"cName\":\"SaudiArabia\",\"iso\":\"SA\"},{\"cName\":\"Kazakhstan\",\"iso\":\"KZ\"},{\"cName\":\"Ecuador\",\"iso\":\"EC\"},{\"cName\":\"Bolivia\",\"iso\":\"BO\"},{\"cName\":\"Greece\",\"iso\":\"GR\"},{\"cName\":\"Paraguay\",\"iso\":\"PY\"},{\"cName\":\"Belarus\",\"iso\":\"BY\"},{\"cName\":\"Bulgaria\",\"iso\":\"BG\"},{\"cName\":\"Panama\",\"iso\":\"PA\"},{\"cName\":\"Slovakia\",\"iso\":\"SK\"},{\"cName\":\"Thailand\",\"iso\":\"TH\"},{\"cName\":\"CostaRica\",\"iso\":\"CR\"},{\"cName\":\"Georgia\",\"iso\":\"GE\"},{\"cName\":\"Kuwait\",\"iso\":\"KW\"},{\"cName\":\"Uruguay\",\"iso\":\"UY\"},{\"cName\":\"Croatia\",\"iso\":\"HR\"},{\"cName\":\"Azerbaijan\",\"iso\":\"AZ\"},{\"cName\":\"DominicanRepublic\",\"iso\":\"DO\"},{\"cName\":\"Guatemala\",\"iso\":\"GT\"},{\"cName\":\"Palestine\",\"iso\":\"PS\"},{\"cName\":\"Denmark\",\"iso\":\"DK\"},{\"cName\":\"Venezuela\",\"iso\":\"VE\"},{\"cName\":\"Oman\",\"iso\":\"OM\"},{\"cName\":\"Egypt\",\"iso\":\"EG\"},{\"cName\":\"SriLanka\",\"iso\":\"LK\"},{\"cName\":\"Ireland\",\"iso\":\"IE\"},{\"cName\":\"Lithuania\",\"iso\":\"LT\"},{\"cName\":\"Honduras\",\"iso\":\"HN\"},{\"cName\":\"Ethiopia\",\"iso\":\"ET\"},{\"cName\":\"Cuba\",\"iso\":\"CU\"},{\"cName\":\"Bahrain\",\"iso\":\"BH\"},{\"cName\":\"Slovenia\",\"iso\":\"SI\"},{\"cName\":\"Moldova\",\"iso\":\"MD\"},{\"cName\":\"Armenia\",\"iso\":\"AM\"},{\"cName\":\"Qatar\",\"iso\":\"QA\"},{\"cName\":\"Myanmar\",\"iso\":\"MM\"},{\"cName\":\"Libya\",\"iso\":\"LY\"},{\"cName\":\"BosniaandHerzegovina\",\"iso\":\"BA\"},{\"cName\":\"Kenya\",\"iso\":\"KE\"},{\"cName\":\"Zambia\",\"iso\":\"ZM\"},{\"cName\":\"S.Korea\",\"iso\":\"KR\"},{\"cName\":\"Nigeria\",\"iso\":\"NG\"},{\"cName\":\"NorthMacedonia\",\"iso\":\"MK\"},{\"cName\":\"Algeria\",\"iso\":\"DZ\"},{\"cName\":\"Kyrgyzstan\",\"iso\":\"KG\"},{\"cName\":\"Mongolia\",\"iso\":\"MN\"},{\"cName\":\"Afghanistan\",\"iso\":\"AF\"},{\"cName\":\"Latvia\",\"iso\":\"LV\"},{\"cName\":\"Norway\",\"iso\":\"NO\"},{\"cName\":\"Albania\",\"iso\":\"AL\"},{\"cName\":\"Estonia\",\"iso\":\"EE\"},{\"cName\":\"Uzbekistan\",\"iso\":\"UZ\"},{\"cName\":\"Namibia\",\"iso\":\"NA\"},{\"cName\":\"Montenegro\",\"iso\":\"ME\"},{\"cName\":\"Finland\",\"iso\":\"FI\"},{\"cName\":\"Ghana\",\"iso\":\"GH\"},{\"cName\":\"Mozambique\",\"iso\":\"MZ\"},{\"cName\":\"Uganda\",\"iso\":\"UG\"},{\"cName\":\"Cyprus\",\"iso\":\"CY\"},{\"cName\":\"Botswana\",\"iso\":\"BW\"},{\"cName\":\"ElSalvador\",\"iso\":\"SV\"},{\"cName\":\"Cameroon\",\"iso\":\"CM\"},{\"cName\":\"Zimbabwe\",\"iso\":\"ZW\"},{\"cName\":\"Maldives\",\"iso\":\"MV\"},{\"cName\":\"Luxembourg\",\"iso\":\"LU\"},{\"cName\":\"Cambodia\",\"iso\":\"KH\"},{\"cName\":\"Singapore\",\"iso\":\"SG\"},{\"cName\":\"Rwanda\",\"iso\":\"RW\"},{\"cName\":\"Jamaica\",\"iso\":\"JM\"},{\"cName\":\"IvoryCoast\",\"iso\":\"CI\"},{\"cName\":\"Senegal\",\"iso\":\"SN\"},{\"cName\":\"Vietnam\",\"iso\":\"VN\"},{\"cName\":\"DRC\",\"iso\":\"CD\"},{\"cName\":\"Madagascar\",\"iso\":\"MG\"},{\"cName\":\"Malawi\",\"iso\":\"MW\"},{\"cName\":\"Angola\",\"iso\":\"AO\"},{\"cName\":\"Sudan\",\"iso\":\"SD\"},{\"cName\":\"TrinidadandTobago\",\"iso\":\"TT\"},{\"cName\":\"Réunion\",\"iso\":\"RE\"},{\"cName\":\"CaboVerde\",\"iso\":\"CV\"},{\"cName\":\"Malta\",\"iso\":\"MT\"},{\"cName\":\"Australia\",\"iso\":\"AU\"},{\"cName\":\"FrenchGuiana\",\"iso\":\"GF\"},{\"cName\":\"Syria\",\"iso\":\"SY\"},{\"cName\":\"Gabon\",\"iso\":\"GA\"},{\"cName\":\"Guinea\",\"iso\":\"GN\"},{\"cName\":\"Suriname\",\"iso\":\"SR\"},{\"cName\":\"Mauritania\",\"iso\":\"MR\"},{\"cName\":\"Guyana\",\"iso\":\"GY\"},{\"cName\":\"Eswatini\",\"iso\":\"SZ\"},{\"cName\":\"Haiti\",\"iso\":\"HT\"},{\"cName\":\"Mayotte\",\"iso\":\"YT\"},{\"cName\":\"FrenchPolynesia\",\"iso\":\"PF\"},{\"cName\":\"Guadeloupe\",\"iso\":\"GP\"},{\"cName\":\"PapuaNewGuinea\",\"iso\":\"PG\"},{\"cName\":\"Seychelles\",\"iso\":\"SC\"},{\"cName\":\"Taiwan\",\"iso\":\"TW\"},{\"cName\":\"Fiji\",\"iso\":\"FJ\"},{\"cName\":\"Somalia\",\"iso\":\"SO\"},{\"cName\":\"Togo\",\"iso\":\"TG\"},{\"cName\":\"Mali\",\"iso\":\"ML\"},{\"cName\":\"Andorra\",\"iso\":\"AD\"},{\"cName\":\"Tajikistan\",\"iso\":\"TJ\"},{\"cName\":\"Belize\",\"iso\":\"BZ\"},{\"cName\":\"BurkinaFaso\",\"iso\":\"BF\"},{\"cName\":\"Bahamas\",\"iso\":\"BS\"},{\"cName\":\"Martinique\",\"iso\":\"MQ\"},{\"cName\":\"Congo\",\"iso\":\"CG\"},{\"cName\":\"Curaçao\",\"iso\":\"CW\"},{\"cName\":\"Lesotho\",\"iso\":\"LS\"},{\"cName\":\"HongKong\",\"iso\":\"HK\"},{\"cName\":\"Djibouti\",\"iso\":\"DJ\"},{\"cName\":\"Aruba\",\"iso\":\"AW\"},{\"cName\":\"SouthSudan\",\"iso\":\"SS\"},{\"cName\":\"Timor-Leste\",\"iso\":\"TL\"},{\"cName\":\"EquatorialGuinea\",\"iso\":\"GQ\"},{\"cName\":\"Nicaragua\",\"iso\":\"NI\"},{\"cName\":\"Benin\",\"iso\":\"BJ\"},{\"cName\":\"CAR\",\"iso\":\"CF\"},{\"cName\":\"Yemen\",\"iso\":\"YE\"},{\"cName\":\"Iceland\",\"iso\":\"IS\"},{\"cName\":\"Gambia\",\"iso\":\"GM\"},{\"cName\":\"Eritrea\",\"iso\":\"ER\"},{\"cName\":\"SierraLeone\",\"iso\":\"SL\"},{\"cName\":\"Burundi\",\"iso\":\"BI\"},{\"cName\":\"Niger\",\"iso\":\"NE\"},{\"cName\":\"SaintLucia\",\"iso\":\"LC\"},{\"cName\":\"Liberia\",\"iso\":\"LR\"},{\"cName\":\"SanMarino\",\"iso\":\"SM\"},{\"cName\":\"Chad\",\"iso\":\"TD\"},{\"cName\":\"Gibraltar\",\"iso\":\"GI\"},{\"cName\":\"Barbados\",\"iso\":\"BB\"},{\"cName\":\"Guinea-Bissau\",\"iso\":\"GW\"},{\"cName\":\"Comoros\",\"iso\":\"KM\"},{\"cName\":\"Laos\",\"iso\":\"LA\"},{\"cName\":\"Liechtenstein\",\"iso\":\"LI\"},{\"cName\":\"NewZealand\",\"iso\":\"NZ\"},{\"cName\":\"Monaco\",\"iso\":\"MC\"},{\"cName\":\"SintMaarten\",\"iso\":\"SX\"},{\"cName\":\"Bermuda\",\"iso\":\"BM\"},{\"cName\":\"TurksandCaicos\",\"iso\":\"TC\"},{\"cName\":\"SaintMartin\",\"iso\":\"MF\"},{\"cName\":\"SaoTomeandPrincipe\",\"iso\":\"ST\"},{\"cName\":\"Bhutan\",\"iso\":\"BT\"},{\"cName\":\"St.VincentGrenadines\",\"iso\":\"VC\"},{\"cName\":\"BritishVirginIslands\",\"iso\":\"VG\"},{\"cName\":\"IsleofMan\",\"iso\":\"IM\"},{\"cName\":\"Mauritius\",\"iso\":\"MU\"},{\"cName\":\"CaribbeanNetherlands\",\"iso\":\"BQ\"},{\"cName\":\"AntiguaandBarbuda\",\"iso\":\"AG\"},{\"cName\":\"St.Barth\",\"iso\":\"BL\"},{\"cName\":\"FaeroeIslands\",\"iso\":\"FO\"},{\"cName\":\"CaymanIslands\",\"iso\":\"KY\"},{\"cName\":\"SaintKittsandNevis\",\"iso\":\"KN\"},{\"cName\":\"Tanzania\",\"iso\":\"TZ\"},{\"cName\":\"WallisandFutuna\",\"iso\":\"WF\"},{\"cName\":\"Brunei\",\"iso\":\"BN\"},{\"cName\":\"Dominica\",\"iso\":\"DM\"},{\"cName\":\"Grenada\",\"iso\":\"GD\"},{\"cName\":\"NewCaledonia\",\"iso\":\"NC\"},{\"cName\":\"Anguilla\",\"iso\":\"AI\"},{\"cName\":\"Greenland\",\"iso\":\"GL\"},{\"cName\":\"FalklandIslands\",\"iso\":\"FK\"},{\"cName\":\"Macao\",\"iso\":\"MO\"},{\"cName\":\"VaticanCity\",\"iso\":\"VA\"},{\"cName\":\"SaintPierreMiquelon\",\"iso\":\"PM\"},{\"cName\":\"Montserrat\",\"iso\":\"MS\"},{\"cName\":\"SolomonIslands\",\"iso\":\"SB\"},{\"cName\":\"WesternSahara\",\"iso\":\"EH\"},{\"cName\":\"Vanuatu\",\"iso\":\"VU\"},{\"cName\":\"MarshallIslands\",\"iso\":\"MH\"},{\"cName\":\"Samoa\",\"iso\":\"WS\"},{\"cName\":\"SaintHelena\",\"iso\":\"SH\"},{\"cName\":\"China\",\"iso\":\"CN\"}];\r\n//     return !country.findIndex(e=>e.cName===name)?'undefined':country[country.findIndex(e=>e.cName===name)].iso;\r\n// }\r\n    //서치버튼을 눌렀을떄\r\n    // console.log(firstCountryName,secondCountryName)\r\n// }\r\n// if (firstCountryName !== \"\" && secondCountryName !== \"\"){\r\n    \r\n// }else{\r\n\r\n// }\r\nexport default CountryInput;","\r\n\r\nimport * as React from 'react';\r\nimport Header from './Semantic/Header';\r\nimport Footer from './Semantic/Footer';\r\nimport AnalysisInput from './Etc/AnalysisInput'\r\n// import './Analysis.css'\r\n\r\n\r\n\r\nfunction Analysis() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n                <AnalysisInput/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Analysis;","import React, { useState } from \"react\"\r\nimport \"../css/Map.css\"\r\nimport { WorldMap } from \"react-svg-worldmap\"\r\nimport Header from './Semantic/Header';\r\nimport Footer from './Semantic/Footer';\r\nfunction Map() {\r\n\r\n    //\r\n    const [state, setState] = useState({ cName: \"Select Country\", iso: \"\", val: \"\", pre: \"\", suff: \"\" })\r\n\r\n    // data array\r\n    const data =\r\n        [\r\n            { \"country\": \"cn\", value: 1389618778 }, // china\r\n            { \"country\": \"in\", value: 1311559204 }, // india\r\n            { \"country\": \"us\", value: 331883986 },  // united states\r\n            { \"country\": \"id\", value: 264935824 },  // indonesia\r\n            { \"country\": \"br\", value: 210301591 },  // brazil\r\n            { \"country\": \"ng\", value: 208679114 },  // nigeria\r\n            { \"country\": \"ru\", value: 141944641 },  // russia\r\n            { \"country\": \"mx\", value: 127318112 }   // mexico\r\n        ]\r\n    // E.g. format the number 1000000 to \"1 thousand\"\r\n    const formattedNumber = (num: number, digits: number) => {\r\n        var si = [\r\n            { value: 1, symbol: \"\" },\r\n            { value: 1E3, symbol: \" thousand \" },\r\n            { value: 1E6, symbol: \" million \" },\r\n            { value: 1E9, symbol: \" billion \" }\r\n        ];\r\n        var rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\r\n        var i;\r\n        for (i = si.length - 1; i > 0; i--) {\r\n            if (num >= si[i].value) {\r\n                break;\r\n            }\r\n        }\r\n        return (num / si[i].value).toFixed(digits).replace(rx, \"$1\") + si[i].symbol;\r\n    }\r\n\r\n    const clickAction = (event: React.MouseEvent<SVGElement, Event>, countryName: string, isoCode: string, value: string, prefix: string, suffix: string) => {\r\n        const numberValue = parseInt(value, 10)\r\n        const fNumber = formattedNumber(numberValue, 2)\r\n        setState({ cName: countryName, iso: isoCode, val: fNumber, pre: \"\", suff: \"\" })\r\n        return (<div></div>)\r\n    }\r\n\r\n    return (\r\n        < div className=\"Map\" >\r\n            <Header />\r\n            < div className=\"Main\">\r\n                <WorldMap\r\n                    title=\"The ten highest GDP per capita countries\"\r\n                    size=\"xl\"\r\n                    data={data}\r\n                    onClickFunction={clickAction}\r\n                    color = \"red\"\r\n                />\r\n                <div className=\"world_map\">\r\n                    <table>\r\n                        <th>나라 정보</th>\r\n                        <tr>\r\n                            <td>Country: {state.cName}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Iso Code: {state.iso}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>flag: <img width=\"100px\" src={`https://purecatamphetamine.github.io/country-flag-icons/3x2/${state.iso}.svg`} alt=\"test\" /></td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                            <td><p>GDP per capita: {state.val}</p></td>\r\n                        </tr>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import * as React from 'react';\nimport * as ReactDom from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch  } from 'react-router-dom';\nimport './App.css'\n\nimport Home from './Component/Screens/Home';\nimport Compare from './Component/Screens/Compare';\nimport Analysis from './Component/Screens/Analysis';\nimport Map from './Component/Screens/Map';\n\nfunction App() {\n    return (\n        <div className=\"display\">\n            <Router> \n                <Switch>\n                    <Route path='/Compare' component={Compare} />\n                    <Route path='/Analysis' component={Analysis} /> \n                    <Route path='/Map' component={Map} /> \n                    <Route path='/' component={Home} />\n                    <Route render={() => <div className='error'>에러 페이지</div>} />\n                \n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}